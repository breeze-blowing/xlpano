{"version":3,"file":"main.72475264eb88245b0474.js","mappings":"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","sources":["webpack://xl-pano/webpack/bootstrap","webpack://xl-pano/webpack/runtime/global","webpack://xl-pano/webpack/runtime/publicPath","webpack://xl-pano/./src/utils/webgl-utils.js","webpack://xl-pano/./src/utils/webgl-debug.js","webpack://xl-pano/./src/utils/cuon-utils.ts","webpack://xl-pano/./src/utils/process.ts","webpack://xl-pano/./src/lib/resource.ts","webpack://xl-pano/./src/config/index.ts","webpack://xl-pano/./src/utils/matrix.ts","webpack://xl-pano/./src/utils/math.ts","webpack://xl-pano/./src/lib/interface/BaseScene.ts","webpack://xl-pano/./src/lib/CubeScene.ts","webpack://xl-pano/./src/lib/SphereScene.ts","webpack://xl-pano/./src/lib/Pano.ts","webpack://xl-pano/./src/shader/cube/index.vert","webpack://xl-pano/./src/shader/cube/index.frag","webpack://xl-pano/./src/shader/sphere/index.vert","webpack://xl-pano/./src/shader/sphere/index.frag","webpack://xl-pano/./src/lib/HotSpot.ts","webpack://xl-pano/./example/index.ts"],"sourcesContent":["// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","var scriptUrl;\nif (__webpack_require__.g.importScripts) scriptUrl = __webpack_require__.g.location + \"\";\nvar document = __webpack_require__.g.document;\nif (!scriptUrl && document) {\n\tif (document.currentScript)\n\t\tscriptUrl = document.currentScript.src\n\tif (!scriptUrl) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tif(scripts.length) scriptUrl = scripts[scripts.length - 1].src\n\t}\n}\n// When supporting browsers where an automatic publicPath is not supported you must specify an output.publicPath manually via configuration\n// or pass an empty string (\"\") and set the __webpack_public_path__ variable from your code to use your own logic.\nif (!scriptUrl) throw new Error(\"Automatic publicPath is not supported in this browser\");\nscriptUrl = scriptUrl.replace(/#.*$/, \"\").replace(/\\?.*$/, \"\").replace(/\\/[^\\/]+$/, \"/\");\n__webpack_require__.p = scriptUrl;","const WebGLUtils = function() {\r\n\r\n/**\r\n * Creates the HTLM for a failure message\r\n * @param {string} canvasContainerId id of container of th\r\n *        canvas.\r\n * @return {string} The html.\r\n */\r\nvar makeFailHTML = function(msg) {\r\n  return '' +\r\n        '<div style=\"margin: auto; width:500px;z-index:10000;margin-top:20em;text-align:center;\">' + msg + '</div>';\r\n  return '' +\r\n    '<table style=\"background-color: #8CE; width: 100%; height: 100%;\"><tr>' +\r\n    '<td align=\"center\">' +\r\n    '<div style=\"display: table-cell; vertical-align: middle;\">' +\r\n    '<div style=\"\">' + msg + '</div>' +\r\n    '</div>' +\r\n    '</td></tr></table>';\r\n};\r\n\r\n/**\r\n * Mesasge for getting a webgl browser\r\n * @type {string}\r\n */\r\nvar GET_A_WEBGL_BROWSER = '' +\r\n  'This page requires a browser that supports WebGL.<br/>' +\r\n  '<a href=\"http://get.webgl.org\">Click here to upgrade your browser.</a>';\r\n\r\n/**\r\n * Mesasge for need better hardware\r\n * @type {string}\r\n */\r\nvar OTHER_PROBLEM = '' +\r\n  \"It doesn't appear your computer can support WebGL.<br/>\" +\r\n  '<a href=\"http://get.webgl.org\">Click here for more information.</a>';\r\n\r\n/**\r\n * Creates a webgl context. If creation fails it will\r\n * change the contents of the container of the <canvas>\r\n * tag to an error message with the correct links for WebGL.\r\n * @param {Element} canvas. The canvas element to create a\r\n *     context from.\r\n * @param {WebGLContextCreationAttirbutes} opt_attribs Any\r\n *     creation attributes you want to pass in.\r\n * @param {function:(msg)} opt_onError An function to call\r\n *     if there is an error during creation.\r\n * @return {WebGLRenderingContext} The created context.\r\n */\r\nvar setupWebGL = function(canvas, opt_attribs, opt_onError) {\r\n  function handleCreationError(msg) {\r\n      var container = document.getElementsByTagName(\"body\")[0];\r\n    //var container = canvas.parentNode;\r\n    if (container) {\r\n      var str = window.WebGLRenderingContext ?\r\n           OTHER_PROBLEM :\r\n           GET_A_WEBGL_BROWSER;\r\n      if (msg) {\r\n        str += \"<br/><br/>Status: \" + msg;\r\n      }\r\n      container.innerHTML = makeFailHTML(str);\r\n    }\r\n  };\r\n\r\n  opt_onError = opt_onError || handleCreationError;\r\n\r\n  if (canvas.addEventListener) {\r\n    canvas.addEventListener(\"webglcontextcreationerror\", function(event) {\r\n          opt_onError(event.statusMessage);\r\n        }, false);\r\n  }\r\n  var context = create3DContext(canvas, opt_attribs);\r\n  if (!context) {\r\n    if (!window.WebGLRenderingContext) {\r\n      opt_onError(\"\");\r\n    } else {\r\n      opt_onError(\"\");\r\n    }\r\n  }\r\n\r\n  return context;\r\n};\r\n\r\n/**\r\n * Creates a webgl context.\r\n * @param {!Canvas} canvas The canvas tag to get context\r\n *     from. If one is not passed in one will be created.\r\n * @return {!WebGLContext} The created context.\r\n */\r\nvar create3DContext = function(canvas, opt_attribs) {\r\n  var names = [\"webgl\", \"experimental-webgl\", \"webkit-3d\", \"moz-webgl\"];\r\n  var context = null;\r\n  for (var ii = 0; ii < names.length; ++ii) {\r\n    try {\r\n      context = canvas.getContext(names[ii], opt_attribs);\r\n    } catch(e) {}\r\n    if (context) {\r\n      break;\r\n    }\r\n  }\r\n  return context;\r\n}\r\n\r\nreturn {\r\n  create3DContext: create3DContext,\r\n  setupWebGL: setupWebGL\r\n};\r\n}();\r\n\r\nexport default WebGLUtils;\r\n","const WebGLDebugUtils = function() {\r\n\r\n/**\r\n * Wrapped logging function.\r\n * @param {string} msg Message to log.\r\n */\r\nvar log = function(msg) {\r\n  if (window.console && window.console.log) {\r\n    window.console.log(msg);\r\n  }\r\n};\r\n\r\n/**\r\n * Which arguements are enums.\r\n * @type {!Object.<number, string>}\r\n */\r\nvar glValidEnumContexts = {\r\n\r\n  // Generic setters and getters\r\n\r\n  'enable': { 0:true },\r\n  'disable': { 0:true },\r\n  'getParameter': { 0:true },\r\n\r\n  // Rendering\r\n\r\n  'drawArrays': { 0:true },\r\n  'drawElements': { 0:true, 2:true },\r\n\r\n  // Shaders\r\n\r\n  'createShader': { 0:true },\r\n  'getShaderParameter': { 1:true },\r\n  'getProgramParameter': { 1:true },\r\n\r\n  // Vertex attributes\r\n\r\n  'getVertexAttrib': { 1:true },\r\n  'vertexAttribPointer': { 2:true },\r\n\r\n  // Textures\r\n\r\n  'bindTexture': { 0:true },\r\n  'activeTexture': { 0:true },\r\n  'getTexParameter': { 0:true, 1:true },\r\n  'texParameterf': { 0:true, 1:true },\r\n  'texParameteri': { 0:true, 1:true, 2:true },\r\n  'texImage2D': { 0:true, 2:true, 6:true, 7:true },\r\n  'texSubImage2D': { 0:true, 6:true, 7:true },\r\n  'copyTexImage2D': { 0:true, 2:true },\r\n  'copyTexSubImage2D': { 0:true },\r\n  'generateMipmap': { 0:true },\r\n\r\n  // Buffer objects\r\n\r\n  'bindBuffer': { 0:true },\r\n  'bufferData': { 0:true, 2:true },\r\n  'bufferSubData': { 0:true },\r\n  'getBufferParameter': { 0:true, 1:true },\r\n\r\n  // Renderbuffers and framebuffers\r\n\r\n  'pixelStorei': { 0:true, 1:true },\r\n  'readPixels': { 4:true, 5:true },\r\n  'bindRenderbuffer': { 0:true },\r\n  'bindFramebuffer': { 0:true },\r\n  'checkFramebufferStatus': { 0:true },\r\n  'framebufferRenderbuffer': { 0:true, 1:true, 2:true },\r\n  'framebufferTexture2D': { 0:true, 1:true, 2:true },\r\n  'getFramebufferAttachmentParameter': { 0:true, 1:true, 2:true },\r\n  'getRenderbufferParameter': { 0:true, 1:true },\r\n  'renderbufferStorage': { 0:true, 1:true },\r\n\r\n  // Frame buffer operations (clear, blend, depth test, stencil)\r\n\r\n  'clear': { 0:true },\r\n  'depthFunc': { 0:true },\r\n  'blendFunc': { 0:true, 1:true },\r\n  'blendFuncSeparate': { 0:true, 1:true, 2:true, 3:true },\r\n  'blendEquation': { 0:true },\r\n  'blendEquationSeparate': { 0:true, 1:true },\r\n  'stencilFunc': { 0:true },\r\n  'stencilFuncSeparate': { 0:true, 1:true },\r\n  'stencilMaskSeparate': { 0:true },\r\n  'stencilOp': { 0:true, 1:true, 2:true },\r\n  'stencilOpSeparate': { 0:true, 1:true, 2:true, 3:true },\r\n\r\n  // Culling\r\n\r\n  'cullFace': { 0:true },\r\n  'frontFace': { 0:true },\r\n};\r\n\r\n/**\r\n * Map of numbers to names.\r\n * @type {Object}\r\n */\r\nvar glEnums = null;\r\n\r\n/**\r\n * Initializes this module. Safe to call more than once.\r\n * @param {!WebGLRenderingContext} ctx A WebGL context. If\r\n *    you have more than one context it doesn't matter which one\r\n *    you pass in, it is only used to pull out constants.\r\n */\r\nfunction init(ctx) {\r\n  if (glEnums == null) {\r\n    glEnums = { };\r\n    for (var propertyName in ctx) {\r\n      if (typeof ctx[propertyName] == 'number') {\r\n        glEnums[ctx[propertyName]] = propertyName;\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * Checks the utils have been initialized.\r\n */\r\nfunction checkInit() {\r\n  if (glEnums == null) {\r\n    throw 'WebGLDebugUtils.init(ctx) not called';\r\n  }\r\n}\r\n\r\n/**\r\n * Returns true or false if value matches any WebGL enum\r\n * @param {*} value Value to check if it might be an enum.\r\n * @return {boolean} True if value matches one of the WebGL defined enums\r\n */\r\nfunction mightBeEnum(value) {\r\n  checkInit();\r\n  return (glEnums[value] !== undefined);\r\n}\r\n\r\n/**\r\n * Gets an string version of an WebGL enum.\r\n *\r\n * Example:\r\n *   var str = WebGLDebugUtil.glEnumToString(ctx.getError());\r\n *\r\n * @param {number} value Value to return an enum for\r\n * @return {string} The string version of the enum.\r\n */\r\nfunction glEnumToString(value) {\r\n  checkInit();\r\n  var name = glEnums[value];\r\n  return (name !== undefined) ? name :\r\n      (\"*UNKNOWN WebGL ENUM (0x\" + value.toString(16) + \")\");\r\n}\r\n\r\n/**\r\n * Returns the string version of a WebGL argument.\r\n * Attempts to convert enum arguments to strings.\r\n * @param {string} functionName the name of the WebGL function.\r\n * @param {number} argumentIndx the index of the argument.\r\n * @param {*} value The value of the argument.\r\n * @return {string} The value as a string.\r\n */\r\nfunction glFunctionArgToString(functionName, argumentIndex, value) {\r\n  var funcInfo = glValidEnumContexts[functionName];\r\n  if (funcInfo !== undefined) {\r\n    if (funcInfo[argumentIndex]) {\r\n      return glEnumToString(value);\r\n    }\r\n  }\r\n  return value.toString();\r\n}\r\n\r\n/**\r\n * Given a WebGL context returns a wrapped context that calls\r\n * gl.getError after every command and calls a function if the\r\n * result is not gl.NO_ERROR.\r\n *\r\n * @param {!WebGLRenderingContext} ctx The webgl context to\r\n *        wrap.\r\n * @param {!function(err, funcName, args): void} opt_onErrorFunc\r\n *        The function to call when gl.getError returns an\r\n *        error. If not specified the default function calls\r\n *        console.log with a message.\r\n */\r\nfunction makeDebugContext(ctx, opt_onErrorFunc) {\r\n  init(ctx);\r\n  opt_onErrorFunc = opt_onErrorFunc || function(err, functionName, args) {\r\n        // apparently we can't do args.join(\",\");\r\n        var argStr = \"\";\r\n        for (var ii = 0; ii < args.length; ++ii) {\r\n          argStr += ((ii == 0) ? '' : ', ') +\r\n              glFunctionArgToString(functionName, ii, args[ii]);\r\n        }\r\n        log(\"WebGL error \"+ glEnumToString(err) + \" in \"+ functionName +\r\n            \"(\" + argStr + \")\");\r\n      };\r\n\r\n  // Holds booleans for each GL error so after we get the error ourselves\r\n  // we can still return it to the client app.\r\n  var glErrorShadow = { };\r\n\r\n  // Makes a function that calls a WebGL function and then calls getError.\r\n  function makeErrorWrapper(ctx, functionName) {\r\n    return function() {\r\n      var result = ctx[functionName].apply(ctx, arguments);\r\n      var err = ctx.getError();\r\n      if (err != 0) {\r\n        glErrorShadow[err] = true;\r\n        opt_onErrorFunc(err, functionName, arguments);\r\n      }\r\n      return result;\r\n    };\r\n  }\r\n\r\n  // Make a an object that has a copy of every property of the WebGL context\r\n  // but wraps all functions.\r\n  var wrapper = {};\r\n  for (var propertyName in ctx) {\r\n    if (typeof ctx[propertyName] == 'function') {\r\n       wrapper[propertyName] = makeErrorWrapper(ctx, propertyName);\r\n     } else {\r\n       wrapper[propertyName] = ctx[propertyName];\r\n     }\r\n  }\r\n\r\n  // Override the getError function with one that returns our saved results.\r\n  wrapper.getError = function() {\r\n    for (var err in glErrorShadow) {\r\n      if (glErrorShadow[err]) {\r\n        glErrorShadow[err] = false;\r\n        return err;\r\n      }\r\n    }\r\n    return ctx.NO_ERROR;\r\n  };\r\n\r\n  return wrapper;\r\n}\r\n\r\nfunction resetToInitialState(ctx) {\r\n  var numAttribs = ctx.getParameter(ctx.MAX_VERTEX_ATTRIBS);\r\n  var tmp = ctx.createBuffer();\r\n  ctx.bindBuffer(ctx.ARRAY_BUFFER, tmp);\r\n  for (var ii = 0; ii < numAttribs; ++ii) {\r\n    ctx.disableVertexAttribArray(ii);\r\n    ctx.vertexAttribPointer(ii, 4, ctx.FLOAT, false, 0, 0);\r\n    ctx.vertexAttrib1f(ii, 0);\r\n  }\r\n  ctx.deleteBuffer(tmp);\r\n\r\n  var numTextureUnits = ctx.getParameter(ctx.MAX_TEXTURE_IMAGE_UNITS);\r\n  for (var ii = 0; ii < numTextureUnits; ++ii) {\r\n    ctx.activeTexture(ctx.TEXTURE0 + ii);\r\n    ctx.bindTexture(ctx.TEXTURE_CUBE_MAP, null);\r\n    ctx.bindTexture(ctx.TEXTURE_2D, null);\r\n  }\r\n\r\n  ctx.activeTexture(ctx.TEXTURE0);\r\n  ctx.useProgram(null);\r\n  ctx.bindBuffer(ctx.ARRAY_BUFFER, null);\r\n  ctx.bindBuffer(ctx.ELEMENT_ARRAY_BUFFER, null);\r\n  ctx.bindFramebuffer(ctx.FRAMEBUFFER, null);\r\n  ctx.bindRenderbuffer(ctx.RENDERBUFFER, null);\r\n  ctx.disable(ctx.BLEND);\r\n  ctx.disable(ctx.CULL_FACE);\r\n  ctx.disable(ctx.DEPTH_TEST);\r\n  ctx.disable(ctx.DITHER);\r\n  ctx.disable(ctx.SCISSOR_TEST);\r\n  ctx.blendColor(0, 0, 0, 0);\r\n  ctx.blendEquation(ctx.FUNC_ADD);\r\n  ctx.blendFunc(ctx.ONE, ctx.ZERO);\r\n  ctx.clearColor(0, 0, 0, 0);\r\n  ctx.clearDepth(1);\r\n  ctx.clearStencil(-1);\r\n  ctx.colorMask(true, true, true, true);\r\n  ctx.cullFace(ctx.BACK);\r\n  ctx.depthFunc(ctx.LESS);\r\n  ctx.depthMask(true);\r\n  ctx.depthRange(0, 1);\r\n  ctx.frontFace(ctx.CCW);\r\n  ctx.hint(ctx.GENERATE_MIPMAP_HINT, ctx.DONT_CARE);\r\n  ctx.lineWidth(1);\r\n  ctx.pixelStorei(ctx.PACK_ALIGNMENT, 4);\r\n  ctx.pixelStorei(ctx.UNPACK_ALIGNMENT, 4);\r\n  ctx.pixelStorei(ctx.UNPACK_FLIP_Y_WEBGL, false);\r\n  ctx.pixelStorei(ctx.UNPACK_PREMULTIPLY_ALPHA_WEBGL, false);\r\n  // TODO: Delete this IF.\r\n  if (ctx.UNPACK_COLORSPACE_CONVERSION_WEBGL) {\r\n    ctx.pixelStorei(ctx.UNPACK_COLORSPACE_CONVERSION_WEBGL, ctx.BROWSER_DEFAULT_WEBGL);\r\n  }\r\n  ctx.polygonOffset(0, 0);\r\n  ctx.sampleCoverage(1, false);\r\n  ctx.scissor(0, 0, ctx.canvas.width, ctx.canvas.height);\r\n  ctx.stencilFunc(ctx.ALWAYS, 0, 0xFFFFFFFF);\r\n  ctx.stencilMask(0xFFFFFFFF);\r\n  ctx.stencilOp(ctx.KEEP, ctx.KEEP, ctx.KEEP);\r\n  ctx.viewport(0, 0, ctx.canvas.clientWidth, ctx.canvas.clientHeight);\r\n  ctx.clear(ctx.COLOR_BUFFER_BIT | ctx.DEPTH_BUFFER_BIT | ctx.STENCIL_BUFFER_BIT);\r\n\r\n  // TODO: This should NOT be needed but Firefox fails with 'hint'\r\n  while(ctx.getError());\r\n}\r\n\r\nfunction makeLostContextSimulatingContext(ctx) {\r\n  var wrapper_ = {};\r\n  var contextId_ = 1;\r\n  var contextLost_ = false;\r\n  var resourceId_ = 0;\r\n  var resourceDb_ = [];\r\n  var onLost_ = undefined;\r\n  var onRestored_ = undefined;\r\n  var nextOnRestored_ = undefined;\r\n\r\n  // Holds booleans for each GL error so can simulate errors.\r\n  var glErrorShadow_ = { };\r\n\r\n  function isWebGLObject(obj) {\r\n    //return false;\r\n    return (obj instanceof WebGLBuffer ||\r\n            obj instanceof WebGLFramebuffer ||\r\n            obj instanceof WebGLProgram ||\r\n            obj instanceof WebGLRenderbuffer ||\r\n            obj instanceof WebGLShader ||\r\n            obj instanceof WebGLTexture);\r\n  }\r\n\r\n  function checkResources(args) {\r\n    for (var ii = 0; ii < args.length; ++ii) {\r\n      var arg = args[ii];\r\n      if (isWebGLObject(arg)) {\r\n        return arg.__webglDebugContextLostId__ == contextId_;\r\n      }\r\n    }\r\n    return true;\r\n  }\r\n\r\n  function clearErrors() {\r\n    var k = Object.keys(glErrorShadow_);\r\n    for (var ii = 0; ii < k.length; ++ii) {\r\n      delete glErrorShdow_[k];\r\n    }\r\n  }\r\n\r\n  // Makes a function that simulates WebGL when out of context.\r\n  function makeLostContextWrapper(ctx, functionName) {\r\n    var f = ctx[functionName];\r\n    return function() {\r\n      // Only call the functions if the context is not lost.\r\n      if (!contextLost_) {\r\n        if (!checkResources(arguments)) {\r\n          glErrorShadow_[ctx.INVALID_OPERATION] = true;\r\n          return;\r\n        }\r\n        var result = f.apply(ctx, arguments);\r\n        return result;\r\n      }\r\n    };\r\n  }\r\n\r\n  for (var propertyName in ctx) {\r\n    if (typeof ctx[propertyName] == 'function') {\r\n       wrapper_[propertyName] = makeLostContextWrapper(ctx, propertyName);\r\n     } else {\r\n       wrapper_[propertyName] = ctx[propertyName];\r\n     }\r\n  }\r\n\r\n  function makeWebGLContextEvent(statusMessage) {\r\n    return {statusMessage: statusMessage};\r\n  }\r\n\r\n  function freeResources() {\r\n    for (var ii = 0; ii < resourceDb_.length; ++ii) {\r\n      var resource = resourceDb_[ii];\r\n      if (resource instanceof WebGLBuffer) {\r\n        ctx.deleteBuffer(resource);\r\n      } else if (resource instanceof WebctxFramebuffer) {\r\n        ctx.deleteFramebuffer(resource);\r\n      } else if (resource instanceof WebctxProgram) {\r\n        ctx.deleteProgram(resource);\r\n      } else if (resource instanceof WebctxRenderbuffer) {\r\n        ctx.deleteRenderbuffer(resource);\r\n      } else if (resource instanceof WebctxShader) {\r\n        ctx.deleteShader(resource);\r\n      } else if (resource instanceof WebctxTexture) {\r\n        ctx.deleteTexture(resource);\r\n      }\r\n    }\r\n  }\r\n\r\n  wrapper_.loseContext = function() {\r\n    if (!contextLost_) {\r\n      contextLost_ = true;\r\n      ++contextId_;\r\n      while (ctx.getError());\r\n      clearErrors();\r\n      glErrorShadow_[ctx.CONTEXT_LOST_WEBGL] = true;\r\n      setTimeout(function() {\r\n          if (onLost_) {\r\n            onLost_(makeWebGLContextEvent(\"context lost\"));\r\n          }\r\n        }, 0);\r\n    }\r\n  };\r\n\r\n  wrapper_.restoreContext = function() {\r\n    if (contextLost_) {\r\n      if (onRestored_) {\r\n        setTimeout(function() {\r\n            freeResources();\r\n            resetToInitialState(ctx);\r\n            contextLost_ = false;\r\n            if (onRestored_) {\r\n              var callback = onRestored_;\r\n              onRestored_ = nextOnRestored_;\r\n              nextOnRestored_ = undefined;\r\n              callback(makeWebGLContextEvent(\"context restored\"));\r\n            }\r\n          }, 0);\r\n      } else {\r\n        throw \"You can not restore the context without a listener\"\r\n      }\r\n    }\r\n  };\r\n\r\n  // Wrap a few functions specially.\r\n  wrapper_.getError = function() {\r\n    if (!contextLost_) {\r\n      var err;\r\n      while (err = ctx.getError()) {\r\n        glErrorShadow_[err] = true;\r\n      }\r\n    }\r\n    for (var err in glErrorShadow_) {\r\n      if (glErrorShadow_[err]) {\r\n        delete glErrorShadow_[err];\r\n        return err;\r\n      }\r\n    }\r\n    return ctx.NO_ERROR;\r\n  };\r\n\r\n  var creationFunctions = [\r\n    \"createBuffer\",\r\n    \"createFramebuffer\",\r\n    \"createProgram\",\r\n    \"createRenderbuffer\",\r\n    \"createShader\",\r\n    \"createTexture\"\r\n  ];\r\n  for (var ii = 0; ii < creationFunctions.length; ++ii) {\r\n    var functionName = creationFunctions[ii];\r\n    wrapper_[functionName] = function(f) {\r\n      return function() {\r\n        if (contextLost_) {\r\n          return null;\r\n        }\r\n        var obj = f.apply(ctx, arguments);\r\n        obj.__webglDebugContextLostId__ = contextId_;\r\n        resourceDb_.push(obj);\r\n        return obj;\r\n      };\r\n    }(ctx[functionName]);\r\n  }\r\n\r\n  var functionsThatShouldReturnNull = [\r\n    \"getActiveAttrib\",\r\n    \"getActiveUniform\",\r\n    \"getBufferParameter\",\r\n    \"getContextAttributes\",\r\n    \"getAttachedShaders\",\r\n    \"getFramebufferAttachmentParameter\",\r\n    \"getParameter\",\r\n    \"getProgramParameter\",\r\n    \"getProgramInfoLog\",\r\n    \"getRenderbufferParameter\",\r\n    \"getShaderParameter\",\r\n    \"getShaderInfoLog\",\r\n    \"getShaderSource\",\r\n    \"getTexParameter\",\r\n    \"getUniform\",\r\n    \"getUniformLocation\",\r\n    \"getVertexAttrib\"\r\n  ];\r\n  for (var ii = 0; ii < functionsThatShouldReturnNull.length; ++ii) {\r\n    var functionName = functionsThatShouldReturnNull[ii];\r\n    wrapper_[functionName] = function(f) {\r\n      return function() {\r\n        if (contextLost_) {\r\n          return null;\r\n        }\r\n        return f.apply(ctx, arguments);\r\n      }\r\n    }(wrapper_[functionName]);\r\n  }\r\n\r\n  var isFunctions = [\r\n    \"isBuffer\",\r\n    \"isEnabled\",\r\n    \"isFramebuffer\",\r\n    \"isProgram\",\r\n    \"isRenderbuffer\",\r\n    \"isShader\",\r\n    \"isTexture\"\r\n  ];\r\n  for (var ii = 0; ii < isFunctions.length; ++ii) {\r\n    var functionName = isFunctions[ii];\r\n    wrapper_[functionName] = function(f) {\r\n      return function() {\r\n        if (contextLost_) {\r\n          return false;\r\n        }\r\n        return f.apply(ctx, arguments);\r\n      }\r\n    }(wrapper_[functionName]);\r\n  }\r\n\r\n  wrapper_.checkFramebufferStatus = function(f) {\r\n    return function() {\r\n      if (contextLost_) {\r\n        return ctx.FRAMEBUFFER_UNSUPPORTED;\r\n      }\r\n      return f.apply(ctx, arguments);\r\n    };\r\n  }(wrapper_.checkFramebufferStatus);\r\n\r\n  wrapper_.getAttribLocation = function(f) {\r\n    return function() {\r\n      if (contextLost_) {\r\n        return -1;\r\n      }\r\n      return f.apply(ctx, arguments);\r\n    };\r\n  }(wrapper_.getAttribLocation);\r\n\r\n  wrapper_.getVertexAttribOffset = function(f) {\r\n    return function() {\r\n      if (contextLost_) {\r\n        return 0;\r\n      }\r\n      return f.apply(ctx, arguments);\r\n    };\r\n  }(wrapper_.getVertexAttribOffset);\r\n\r\n  wrapper_.isContextLost = function() {\r\n    return contextLost_;\r\n  };\r\n\r\n  function wrapEvent(listener) {\r\n    if (typeof(listener) == \"function\") {\r\n      return listener;\r\n    } else {\r\n      return function(info) {\r\n        listener.handleEvent(info);\r\n      }\r\n    }\r\n  }\r\n\r\n  wrapper_.registerOnContextLostListener = function(listener) {\r\n    onLost_ = wrapEvent(listener);\r\n  };\r\n\r\n  wrapper_.registerOnContextRestoredListener = function(listener) {\r\n    if (contextLost_) {\r\n      nextOnRestored_ = wrapEvent(listener);\r\n    } else {\r\n      onRestored_ = wrapEvent(listener);\r\n    }\r\n  }\r\n\r\n  return wrapper_;\r\n}\r\n\r\nreturn {\r\n  /**\r\n   * Initializes this module. Safe to call more than once.\r\n   * @param {!WebGLRenderingContext} ctx A WebGL context. If\r\n   *    you have more than one context it doesn't matter which one\r\n   *    you pass in, it is only used to pull out constants.\r\n   */\r\n  'init': init,\r\n\r\n  /**\r\n   * Returns true or false if value matches any WebGL enum\r\n   * @param {*} value Value to check if it might be an enum.\r\n   * @return {boolean} True if value matches one of the WebGL defined enums\r\n   */\r\n  'mightBeEnum': mightBeEnum,\r\n\r\n  /**\r\n   * Gets an string version of an WebGL enum.\r\n   *\r\n   * Example:\r\n   *   WebGLDebugUtil.init(ctx);\r\n   *   var str = WebGLDebugUtil.glEnumToString(ctx.getError());\r\n   *\r\n   * @param {number} value Value to return an enum for\r\n   * @return {string} The string version of the enum.\r\n   */\r\n  'glEnumToString': glEnumToString,\r\n\r\n  /**\r\n   * Converts the argument of a WebGL function to a string.\r\n   * Attempts to convert enum arguments to strings.\r\n   *\r\n   * Example:\r\n   *   WebGLDebugUtil.init(ctx);\r\n   *   var str = WebGLDebugUtil.glFunctionArgToString('bindTexture', 0, gl.TEXTURE_2D);\r\n   *\r\n   * would return 'TEXTURE_2D'\r\n   *\r\n   * @param {string} functionName the name of the WebGL function.\r\n   * @param {number} argumentIndx the index of the argument.\r\n   * @param {*} value The value of the argument.\r\n   * @return {string} The value as a string.\r\n   */\r\n  'glFunctionArgToString': glFunctionArgToString,\r\n\r\n  /**\r\n   * Given a WebGL context returns a wrapped context that calls\r\n   * gl.getError after every command and calls a function if the\r\n   * result is not NO_ERROR.\r\n   *\r\n   * You can supply your own function if you want. For example, if you'd like\r\n   * an exception thrown on any GL error you could do this\r\n   *\r\n   *    function throwOnGLError(err, funcName, args) {\r\n   *      throw WebGLDebugUtils.glEnumToString(err) + \" was caused by call to\" +\r\n   *            funcName;\r\n   *    };\r\n   *\r\n   *    ctx = WebGLDebugUtils.makeDebugContext(\r\n   *        canvas.getContext(\"webgl\"), throwOnGLError);\r\n   *\r\n   * @param {!WebGLRenderingContext} ctx The webgl context to wrap.\r\n   * @param {!function(err, funcName, args): void} opt_onErrorFunc The function\r\n   *     to call when gl.getError returns an error. If not specified the default\r\n   *     function calls console.log with a message.\r\n   */\r\n  'makeDebugContext': makeDebugContext,\r\n\r\n  /**\r\n   * Given a WebGL context returns a wrapped context that adds 4\r\n   * functions.\r\n   *\r\n   * ctx.loseContext:\r\n   *   simulates a lost context event.\r\n   *\r\n   * ctx.restoreContext:\r\n   *   simulates the context being restored.\r\n   *\r\n   * ctx.registerOnContextLostListener(listener):\r\n   *   lets you register a listener for context lost. Use instead\r\n   *   of addEventListener('webglcontextlostevent', listener);\r\n   *\r\n   * ctx.registerOnContextRestoredListener(listener):\r\n   *   lets you register a listener for context restored. Use\r\n   *   instead of addEventListener('webglcontextrestored',\r\n   *   listener);\r\n   *\r\n   * @param {!WebGLRenderingContext} ctx The webgl context to wrap.\r\n   */\r\n  'makeLostContextSimulatingContext': makeLostContextSimulatingContext,\r\n\r\n  /**\r\n   * Resets a context to the initial state.\r\n   * @param {!WebGLRenderingContext} ctx The webgl context to\r\n   *     reset.\r\n   */\r\n  'resetToInitialState': resetToInitialState\r\n};\r\n\r\n}();\r\n\r\nexport default WebGLDebugUtils;\r\n","// 该工具集主要是顶层工具，一般只会在初始化程序时使用一次\r\nimport WebGLUtils from './webgl-utils';\r\nimport WebGLDebugUtils from './webgl-debug';\r\nimport {WebGLRenderingContextWithProgram} from \"../types/index\";\r\n\r\n/**\r\n * 初始化着色器程序，并挂载到 gl 上\r\n * @param {WebGLRenderingContextWithProgram} gl WebGL 上下文\r\n * @param {string} vshader 顶点着色器代码字符串\r\n * @param {string} fshader 片元着色器代码字符串\r\n * @return void\r\n */\r\nexport function initShaders(gl: WebGLRenderingContextWithProgram, vshader: string, fshader: string): void {\r\n  const program = createProgram(gl, vshader, fshader);\r\n  gl.useProgram(program);\r\n  gl.program = program;\r\n}\r\n\r\n/**\r\n * 切换程序对象\r\n * @param {WebGLRenderingContextWithProgram} gl WebGL 上下文\r\n * @param {WebGLProgram} program 程序对象\r\n * @return void\r\n * */\r\nexport function useProgram(gl: WebGLRenderingContextWithProgram, program: WebGLProgram): void {\r\n  gl.useProgram(program);\r\n  gl.program = program;\r\n}\r\n\r\n/**\r\n * 创建 program 程序对象\r\n * @param {WebGLRenderingContextWithProgram} gl WebGL 上下文\r\n * @param {string} vshader 顶点着色器代码字符串\r\n * @param {string} fshader 片元着色器代码字符串\r\n * @return WebGLProgram\r\n */\r\nexport function createProgram(gl: WebGLRenderingContextWithProgram, vshader: string, fshader: string): WebGLProgram {\r\n  // 创建着色器对象\r\n  const vertexShader = loadShader(gl, gl.VERTEX_SHADER, vshader);\r\n  const fragmentShader = loadShader(gl, gl.FRAGMENT_SHADER, fshader);\r\n\r\n  // 创建程序对象\r\n  const program = gl.createProgram();\r\n  if (!program) {\r\n    throw new Error('创建程序对象失败');\r\n  }\r\n\r\n  // 程序对象绑定着色器对象\r\n  gl.attachShader(program, vertexShader);\r\n  gl.attachShader(program, fragmentShader);\r\n\r\n  // gl 链接程序对象\r\n  gl.linkProgram(program);\r\n\r\n  // 校验上一步的链接结果\r\n  const linked = gl.getProgramParameter(program, gl.LINK_STATUS);\r\n  if (!linked) {\r\n    gl.deleteProgram(program);\r\n    gl.deleteShader(fragmentShader);\r\n    gl.deleteShader(vertexShader);\r\n    throw new Error(`链接程序对象失败：${gl.getProgramInfoLog(program)}`);\r\n  }\r\n  return program;\r\n}\r\n\r\n/**\r\n * 创建着色器对象\r\n * @param {WebGLRenderingContextWithProgram} gl WebGL 上下文\r\n * @param {GLenum} type 着色器类型（顶点/片元）\r\n * @param {string} source 着色器代码\r\n * @return created shader object, or null if the creation has failed.\r\n */\r\nfunction loadShader(gl: WebGLRenderingContextWithProgram, type: GLenum, source: string): WebGLShader {\r\n  // 创建着色器对象\r\n  const shader = gl.createShader(type);\r\n  if (shader === null) {\r\n    throw new Error(`创建 ${type} 着色器对象失败`);\r\n  }\r\n\r\n  // 设置着色器代码\r\n  gl.shaderSource(shader, source);\r\n\r\n  // 编译着色器\r\n  gl.compileShader(shader);\r\n\r\n  // 校验上一步的编译结果\r\n  const compiled = gl.getShaderParameter(shader, gl.COMPILE_STATUS);\r\n  if (!compiled) {\r\n    gl.deleteShader(shader);\r\n    throw new Error(`编译着${type}色器失败：${gl.getShaderInfoLog(shader)}`);\r\n  }\r\n\r\n  return shader;\r\n}\r\n\r\n/**\r\n * 初始化WebGL，并返回上下文\r\n * @param {HTMLCanvasElement} canvas canvas 节点\r\n * @param {boolean} [debug] 是否开启 debug\r\n * @return WebGLRenderingContextWithProgram 上下文\r\n */\r\nexport function getWebGLContext(canvas: HTMLCanvasElement, debug?: boolean): WebGLRenderingContextWithProgram {\r\n  // @ts-ignore 创建 WebGL 上下文\r\n  let gl = WebGLUtils.setupWebGL(canvas, {\r\n    // 开启抗锯齿\r\n    antialias: true,\r\n  });\r\n  if (!gl) {\r\n    throw new Error('创建 WebGL 上下文失败');\r\n  }\r\n\r\n  // 是否需要开启 debug\r\n  if (debug) {\r\n    // @ts-ignore\r\n    gl = WebGLDebugUtils.makeDebugContext(gl);\r\n  }\r\n\r\n  return gl;\r\n}\r\n","// 该工具集主要是 WebGL 流程中经常会用到的工具\r\n\r\nimport {WebGLRenderingContextWithProgram} from \"../types/index\";\r\n\r\n/**\r\n * 把 TypedArray 传递给顶点着色器\r\n * @param {WebGLRenderingContextWithProgram} gl WebGL 上下文\r\n * @param {Float32Array} data 传递进着色器的数据\r\n * @param {number} size 指定从 data 中给每个顶点取数据时取几个，vertexAttribPointer 函数用的\r\n * @param {GLenum} type 数据类型，指明 WebGL 程序取数据时的内存长度\r\n * @param {string} attribute 着色器中定义的变量名\r\n * */\r\nexport function initArrayBuffer(\r\n  gl: WebGLRenderingContextWithProgram,\r\n  data: Float32Array,\r\n  size: number,\r\n  type: GLenum,\r\n  attribute: string\r\n): void {\r\n  const buffer = gl.createBuffer();\r\n  if (!buffer) {\r\n    throw new Error('创建缓冲区对象失败');\r\n  }\r\n  gl.bindBuffer(gl.ARRAY_BUFFER, buffer);\r\n  gl.bufferData(gl.ARRAY_BUFFER, data, gl.STATIC_DRAW);\r\n  const a_attribute = gl.getAttribLocation(gl.program, attribute);\r\n  if (a_attribute < 0) {\r\n    throw new Error(`获取 ${attribute} 地址失败`);\r\n  }\r\n  gl.vertexAttribPointer(a_attribute, size, type, false, 0, 0);\r\n  gl.enableVertexAttribArray(a_attribute);\r\n}\r\n\r\n/**\r\n * 加载图片\r\n * @param {string} src 图片地址\r\n * @return Promise<TexImageSource> 图像资源\r\n * */\r\nexport function loadImage(src: string): Promise<TexImageSource> {\r\n  return new Promise((resolve, reject) => {\r\n    const image = new Image();\r\n    image.crossOrigin = 'anonymous';\r\n    image.onload = () => resolve(image);\r\n    image.onerror = error => reject(error);\r\n    image.src = src;\r\n  });\r\n}\r\n","/**\r\n * 纹理图片加载逻辑\r\n * 1. 第一个场景\r\n * 2. 和第一个场景关联的场景\r\n * 3. 其他场景\r\n * */\r\nimport Pano from \"./Pano\";\r\nimport Scene from \"./interface/Scene\";\r\nimport {loadImage} from \"../utils/process\";\r\n\r\nconst ImageResource: {[keu: string]: TexImageSource} = {};\r\n\r\n/**\r\n * 加载图片资源\r\n * @param {string[]} sources 图片资源路径集合\r\n * @return {TexImageSource[]} 图片资源对象集合\r\n * */\r\nexport async function getTexImageSource(sources: string[]): Promise<TexImageSource[]> {\r\n  const result: TexImageSource[] = [];\r\n  for (const src of sources) {\r\n    if (ImageResource[src]) {\r\n      result.push(ImageResource[src]);\r\n    } else {\r\n      result.push(await loadImage(src));\r\n    }\r\n  }\r\n  return result;\r\n}\r\n\r\n/**\r\n * 加载图片资源\r\n * @param {string} src 图片资源路径\r\n * @return {TexImageSource} 图片资源对象\r\n * */\r\nexport async function getSingleTexImageSource(src: string): Promise<TexImageSource> {\r\n  if (ImageResource[src]) return ImageResource[src];\r\n  return await loadImage(src);\r\n}\r\n\r\n/**\r\n * 加载整个 pano 的纹理图\r\n * 1、加载首个场景，加载完就放行\r\n * 2、接着加载首个场景邻近的场景，先发出请求\r\n * 3、同时开始加载其他场景，后发出请求\r\n * */\r\nexport async function loadPanoTexImage(pano: Pano) {\r\n  const scenes = pano.scenes;\r\n  if (scenes.length > 0) {\r\n    await loadOneSceneTexImage(scenes[0]);\r\n  }\r\n  if (scenes.length > 1) {\r\n    // 第一个场景的关联场景索引\r\n    let firstNeighborIndex: number[] = [];\r\n    const firstHotSpots = scenes[0].hotSpots;\r\n    if (firstHotSpots.length > 0) {\r\n      // 从第一个场景的热点中找到关联场景索引\r\n      firstNeighborIndex = firstHotSpots.map(hot => hot.target);\r\n    }\r\n    // 第一个场景关联场景的所有纹理图片\r\n    let firstNeighborTextures: string[] = [];\r\n    firstNeighborIndex.forEach(neighborIndex => {\r\n      const neighborScene = scenes[neighborIndex];\r\n      if (neighborScene) firstNeighborTextures = firstNeighborTextures.concat(filterSceneSrcTex(neighborScene));\r\n    })\r\n    loadTexImages(firstNeighborTextures);\r\n    // 已经加载完成的索引列表\r\n    const alreadyLoadedSceneIndex = firstNeighborIndex.concat([0]);\r\n    // 其他场景纹理图片\r\n    let otherSceneTextures: string[] = [];\r\n    scenes.forEach((_, index) => {\r\n      if (!alreadyLoadedSceneIndex.includes(index)) {\r\n        const otherScene = scenes[index];\r\n        if (otherScene) otherSceneTextures = otherSceneTextures.concat(filterSceneSrcTex(otherScene));\r\n      }\r\n    });\r\n    loadTexImages(otherSceneTextures);\r\n  }\r\n}\r\n\r\n/**\r\n * 加载单个场景的纹理图片，加载完后直接缓存到 ImageResource\r\n * @param {Scene} scene 场景\r\n * */\r\nfunction loadOneSceneTexImage(scene: Scene): Promise<void> {\r\n  return loadTexImages(filterSceneSrcTex(scene));\r\n}\r\n\r\n/**\r\n * 加载图片，加载完后直接缓存到 ImageResource\r\n * @param {string[]} images 图片资源路径集合\r\n * */\r\nfunction loadTexImages(images: string[]): Promise<void> {\r\n  return Promise.all(images.map(image => loadImage(image))).then((results: TexImageSource[]) => {\r\n    images.forEach((src, index) => {\r\n      ImageResource[src] = results[index];\r\n    });\r\n  });\r\n}\r\n\r\n/**\r\n * 过滤一个场景中资源地址类型的纹理，- 因为场景的纹理可以是资源地址，也可以是完成的资源\r\n * @param {Scene} scene 场景\r\n * */\r\nfunction filterSceneSrcTex(scene: Scene): string[] {\r\n  if (scene.textures instanceof Array) {\r\n    return scene.textures.filter(item => typeof item === 'string') as string[];\r\n  } else {\r\n    return typeof scene.textures === 'string' ? [scene.textures] : [];\r\n  }\r\n}\r\n","// 默认俯仰可视范围角度\r\nexport const DefaultYRange = [-86, 86];\r\n\r\n// 默认静态可视范围角度\r\nexport const DefaultFovy = 60;\r\n\r\n// 所有动画默认执行时间\r\nexport const DefaultAnimDuration = 500;\r\n\r\n// 移动灵敏度\r\nexport const DefaultMovingRate = 1.5;\r\n","/**\r\n * 处理 4 * 4 矩阵的工具类\r\n * */\r\nexport default class Matrix4 {\r\n\r\n  /**\r\n   * @static 类型数组的长度，4 * 4 矩阵长度为 16\r\n   * */\r\n  static size: number = 16;\r\n\r\n  /**\r\n   * @property {Float32Array} elements 最终传给着色器程序的类型数组\r\n   * */\r\n  elements: Float32Array;\r\n\r\n  /**\r\n   * @constructor 构造方法，默认实例化一个单位矩阵\r\n   * @param {Matrix4} [matrix4] 类似于复制一个\r\n   * */\r\n  constructor(matrix4?: Matrix4) {\r\n    let elements: Float32Array;\r\n    if (matrix4) {\r\n      const e = new Float32Array(Matrix4.size);\r\n      for (let i = 0; i < Matrix4.size; i++) {\r\n        e[i] = matrix4.elements[i];\r\n      }\r\n      elements = e;\r\n    } else {\r\n      elements = new Float32Array([\r\n        1, 0, 0, 0,\r\n        0, 1, 0, 0,\r\n        0, 0, 1, 0,\r\n        0, 0, 0, 1\r\n      ]);\r\n    }\r\n    this.elements = elements;\r\n  }\r\n\r\n  /**\r\n   * 重置为单位矩阵\r\n   * @return {Matrix4} 返回实例本身\r\n   * */\r\n  setIdentity() {\r\n    const e = this.elements;\r\n    e[0] = 1;   e[4] = 0;   e[8]  = 0;   e[12] = 0;\r\n    e[1] = 0;   e[5] = 1;   e[9]  = 0;   e[13] = 0;\r\n    e[2] = 0;   e[6] = 0;   e[10] = 1;   e[14] = 0;\r\n    e[3] = 0;   e[7] = 0;   e[11] = 0;   e[15] = 1;\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * 拷贝矩阵\r\n   * @param {Matrix4} matrix4 被拷贝的矩阵\r\n   * @return {Matrix4} 返回实例本身\r\n   * */\r\n  set(matrix4: Matrix4) {\r\n    if (this === matrix4 || this.elements === matrix4.elements) {\r\n      return this;\r\n    }\r\n    const e = new Float32Array(Matrix4.size);\r\n    for (let i = 0; i < Matrix4.size; i++) {\r\n      e[i] = matrix4.elements[i];\r\n    }\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * 右乘矩阵\r\n   * @param {Matrix4} matrix4 用来乘的矩阵\r\n   * @return {Matrix4} 实例本身\r\n   * */\r\n  multiply(matrix4: Matrix4) {\r\n    let i, e, a, b, ai0, ai1, ai2, ai3;\r\n\r\n    // 计算 e = a * b\r\n    e = this.elements;\r\n    a = this.elements;\r\n    b = matrix4.elements;\r\n\r\n    // 如果 e 和 b 是同一个，把 b 存进临时矩阵\r\n    if (e === b) {\r\n      b = new Float32Array(16);\r\n      for (i = 0; i < 16; ++i) {\r\n        b[i] = e[i];\r\n      }\r\n    }\r\n\r\n    for (i = 0; i < 4; i++) {\r\n      ai0=a[i];  ai1=a[i+4];  ai2=a[i+8];  ai3=a[i+12];\r\n      e[i]    = ai0 * b[0]  + ai1 * b[1]  + ai2 * b[2]  + ai3 * b[3];\r\n      e[i+4]  = ai0 * b[4]  + ai1 * b[5]  + ai2 * b[6]  + ai3 * b[7];\r\n      e[i+8]  = ai0 * b[8]  + ai1 * b[9]  + ai2 * b[10] + ai3 * b[11];\r\n      e[i+12] = ai0 * b[12] + ai1 * b[13] + ai2 * b[14] + ai3 * b[15];\r\n    }\r\n\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * 将自己设置成自己的转置矩阵\r\n   * @return {Matrix4} 返回实例本身\r\n   * */\r\n  transpose() {\r\n    let e, t;\r\n\r\n    e = this.elements;\r\n\r\n    t = e[ 1];  e[ 1] = e[ 4];  e[ 4] = t;\r\n    t = e[ 2];  e[ 2] = e[ 8];  e[ 8] = t;\r\n    t = e[ 3];  e[ 3] = e[12];  e[12] = t;\r\n    t = e[ 6];  e[ 6] = e[ 9];  e[ 9] = t;\r\n    t = e[ 7];  e[ 7] = e[13];  e[13] = t;\r\n    t = e[11];  e[11] = e[14];  e[14] = t;\r\n\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * 将实例设置成某一个矩阵的逆矩阵\r\n   * @param {Matrix4} matrix4 需要被计算逆矩阵的矩阵\r\n   * @return {Matrix4} 返回实例本身\r\n   * */\r\n  setInverseOf(matrix4: Matrix4) {\r\n    let i, s, d, inv, det;\r\n\r\n    s = matrix4.elements;\r\n    d = this.elements;\r\n    inv = new Float32Array(16);\r\n\r\n    inv[0]  =   s[5]*s[10]*s[15] - s[5] *s[11]*s[14] - s[9] *s[6]*s[15]\r\n      + s[9]*s[7] *s[14] + s[13]*s[6] *s[11] - s[13]*s[7]*s[10];\r\n    inv[4]  = - s[4]*s[10]*s[15] + s[4] *s[11]*s[14] + s[8] *s[6]*s[15]\r\n      - s[8]*s[7] *s[14] - s[12]*s[6] *s[11] + s[12]*s[7]*s[10];\r\n    inv[8]  =   s[4]*s[9] *s[15] - s[4] *s[11]*s[13] - s[8] *s[5]*s[15]\r\n      + s[8]*s[7] *s[13] + s[12]*s[5] *s[11] - s[12]*s[7]*s[9];\r\n    inv[12] = - s[4]*s[9] *s[14] + s[4] *s[10]*s[13] + s[8] *s[5]*s[14]\r\n      - s[8]*s[6] *s[13] - s[12]*s[5] *s[10] + s[12]*s[6]*s[9];\r\n\r\n    inv[1]  = - s[1]*s[10]*s[15] + s[1] *s[11]*s[14] + s[9] *s[2]*s[15]\r\n      - s[9]*s[3] *s[14] - s[13]*s[2] *s[11] + s[13]*s[3]*s[10];\r\n    inv[5]  =   s[0]*s[10]*s[15] - s[0] *s[11]*s[14] - s[8] *s[2]*s[15]\r\n      + s[8]*s[3] *s[14] + s[12]*s[2] *s[11] - s[12]*s[3]*s[10];\r\n    inv[9]  = - s[0]*s[9] *s[15] + s[0] *s[11]*s[13] + s[8] *s[1]*s[15]\r\n      - s[8]*s[3] *s[13] - s[12]*s[1] *s[11] + s[12]*s[3]*s[9];\r\n    inv[13] =   s[0]*s[9] *s[14] - s[0] *s[10]*s[13] - s[8] *s[1]*s[14]\r\n      + s[8]*s[2] *s[13] + s[12]*s[1] *s[10] - s[12]*s[2]*s[9];\r\n\r\n    inv[2]  =   s[1]*s[6]*s[15] - s[1] *s[7]*s[14] - s[5] *s[2]*s[15]\r\n      + s[5]*s[3]*s[14] + s[13]*s[2]*s[7]  - s[13]*s[3]*s[6];\r\n    inv[6]  = - s[0]*s[6]*s[15] + s[0] *s[7]*s[14] + s[4] *s[2]*s[15]\r\n      - s[4]*s[3]*s[14] - s[12]*s[2]*s[7]  + s[12]*s[3]*s[6];\r\n    inv[10] =   s[0]*s[5]*s[15] - s[0] *s[7]*s[13] - s[4] *s[1]*s[15]\r\n      + s[4]*s[3]*s[13] + s[12]*s[1]*s[7]  - s[12]*s[3]*s[5];\r\n    inv[14] = - s[0]*s[5]*s[14] + s[0] *s[6]*s[13] + s[4] *s[1]*s[14]\r\n      - s[4]*s[2]*s[13] - s[12]*s[1]*s[6]  + s[12]*s[2]*s[5];\r\n\r\n    inv[3]  = - s[1]*s[6]*s[11] + s[1]*s[7]*s[10] + s[5]*s[2]*s[11]\r\n      - s[5]*s[3]*s[10] - s[9]*s[2]*s[7]  + s[9]*s[3]*s[6];\r\n    inv[7]  =   s[0]*s[6]*s[11] - s[0]*s[7]*s[10] - s[4]*s[2]*s[11]\r\n      + s[4]*s[3]*s[10] + s[8]*s[2]*s[7]  - s[8]*s[3]*s[6];\r\n    inv[11] = - s[0]*s[5]*s[11] + s[0]*s[7]*s[9]  + s[4]*s[1]*s[11]\r\n      - s[4]*s[3]*s[9]  - s[8]*s[1]*s[7]  + s[8]*s[3]*s[5];\r\n    inv[15] =   s[0]*s[5]*s[10] - s[0]*s[6]*s[9]  - s[4]*s[1]*s[10]\r\n      + s[4]*s[2]*s[9]  + s[8]*s[1]*s[6]  - s[8]*s[2]*s[5];\r\n\r\n    det = s[0]*inv[0] + s[1]*inv[4] + s[2]*inv[8] + s[3]*inv[12];\r\n    if (det === 0) {\r\n      return this;\r\n    }\r\n\r\n    det = 1 / det;\r\n    for (i = 0; i < 16; i++) {\r\n      d[i] = inv[i] * det;\r\n    }\r\n\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * 将实例设置成自己的逆矩阵\r\n   * @return {Matrix4} 返回实例本身\r\n   * */\r\n  invert() {\r\n    return this.setInverseOf(this);\r\n  }\r\n\r\n  /**\r\n   * 把自己设置成一个正射投影矩阵\r\n   * @param {number} left 左投影区域\r\n   * @param {number} right 右投影区域\r\n   * @param {number} bottom 下投影区域\r\n   * @param {number} top 上投影区域\r\n   * @param {number} near 近投影区域\r\n   * @param {number} far 远投影区域\r\n   * @return {Matrix4} 返回实例本身\r\n   * */\r\n  setOrtho(left: number, right: number, bottom: number, top: number, near: number, far: number) {\r\n    let e, rw, rh, rd;\r\n\r\n    if (left === right || bottom === top || near === far) {\r\n      throw 'null frustum';\r\n    }\r\n\r\n    rw = 1 / (right - left);\r\n    rh = 1 / (top - bottom);\r\n    rd = 1 / (far - near);\r\n\r\n    e = this.elements;\r\n\r\n    e[0]  = 2 * rw;\r\n    e[1]  = 0;\r\n    e[2]  = 0;\r\n    e[3]  = 0;\r\n\r\n    e[4]  = 0;\r\n    e[5]  = 2 * rh;\r\n    e[6]  = 0;\r\n    e[7]  = 0;\r\n\r\n    e[8]  = 0;\r\n    e[9]  = 0;\r\n    e[10] = -2 * rd;\r\n    e[11] = 0;\r\n\r\n    e[12] = -(right + left) * rw;\r\n    e[13] = -(top + bottom) * rh;\r\n    e[14] = -(far + near) * rd;\r\n    e[15] = 1;\r\n\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * 乘以某个正射投影矩阵，并把结果赋值给自己\r\n   * @param {number} left 左投影区域\r\n   * @param {number} right 右投影区域\r\n   * @param {number} bottom 下投影区域\r\n   * @param {number} top 上投影区域\r\n   * @param {number} near 近投影区域\r\n   * @param {number} far 远投影区域\r\n   * @return {Matrix4} 返回实例本身\r\n   * */\r\n  ortho(left: number, right: number, bottom: number, top: number, near: number, far: number) {\r\n    return this.multiply(new Matrix4().setOrtho(left, right, bottom, top, near, far));\r\n  }\r\n\r\n  /**\r\n   * 把自己设置成一个透视投影矩阵\r\n   * @param {number} fovy 上下可视范围-角度制\r\n   * @param {number} aspect 可视范围近处宽高比\r\n   * @param {number} near 投影区域近处距离\r\n   * @param {number} far 投影区域远处距离\r\n   * @return {Matrix4} 返回实例本身\r\n   * */\r\n  setPerspective(fovy: number, aspect: number, near: number, far: number) {\r\n    let e, rd, s, ct;\r\n\r\n    if (near === far || aspect === 0) {\r\n      throw 'null frustum';\r\n    }\r\n    if (near <= 0) {\r\n      throw 'near <= 0';\r\n    }\r\n    if (far <= 0) {\r\n      throw 'far <= 0';\r\n    }\r\n\r\n    fovy = Math.PI * fovy / 180 / 2;\r\n    s = Math.sin(fovy);\r\n    if (s === 0) {\r\n      throw 'null frustum';\r\n    }\r\n\r\n    rd = 1 / (far - near);\r\n    ct = Math.cos(fovy) / s;\r\n\r\n    e = this.elements;\r\n\r\n    e[0]  = ct / aspect;\r\n    e[1]  = 0;\r\n    e[2]  = 0;\r\n    e[3]  = 0;\r\n\r\n    e[4]  = 0;\r\n    e[5]  = ct;\r\n    e[6]  = 0;\r\n    e[7]  = 0;\r\n\r\n    e[8]  = 0;\r\n    e[9]  = 0;\r\n    e[10] = -(far + near) * rd;\r\n    e[11] = -1;\r\n\r\n    e[12] = 0;\r\n    e[13] = 0;\r\n    e[14] = -2 * near * far * rd;\r\n    e[15] = 0;\r\n\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * 乘以某个透视投影矩阵，并把结果赋值给自己\r\n   * @param {number} fovy 上下可视范围-角度制\r\n   * @param {number} aspect 可视范围近处宽高比\r\n   * @param {number} near 投影区域近处距离\r\n   * @param {number} far 投影区域远处距离\r\n   * @return {Matrix4} 返回实例本身\r\n   * */\r\n  perspective(fovy: number, aspect: number, near: number, far: number) {\r\n    return this.multiply(new Matrix4().setPerspective(fovy, aspect, near, far));\r\n  }\r\n\r\n  /**\r\n   * 把自己设置成一个模型矩阵-scale\r\n   * @param {number} x X-轴方向缩放比例\r\n   * @param {number} y Y-轴方向缩放比例\r\n   * @param {number} z Z-轴方向缩放比例\r\n   * @return {Matrix4} 返回实例本身\r\n   * */\r\n  setScale(x: number, y: number, z: number) {\r\n    const e = this.elements;\r\n    e[0] = x;  e[4] = 0;  e[8]  = 0;  e[12] = 0;\r\n    e[1] = 0;  e[5] = y;  e[9]  = 0;  e[13] = 0;\r\n    e[2] = 0;  e[6] = 0;  e[10] = z;  e[14] = 0;\r\n    e[3] = 0;  e[7] = 0;  e[11] = 0;  e[15] = 1;\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * 乘以某个模型矩阵-scale，并把结果赋值给自己\r\n   * @param {number} x X-轴方向缩放比例\r\n   * @param {number} y Y-轴方向缩放比例\r\n   * @param {number} z Z-轴方向缩放比例\r\n   * @return {Matrix4} 返回实例本身\r\n   * */\r\n  scale(x: number, y: number, z: number) {\r\n    const e = this.elements;\r\n    e[0] *= x;  e[4] *= y;  e[8]  *= z;\r\n    e[1] *= x;  e[5] *= y;  e[9]  *= z;\r\n    e[2] *= x;  e[6] *= y;  e[10] *= z;\r\n    e[3] *= x;  e[7] *= y;  e[11] *= z;\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * 把自己设置成一个模型矩阵-translation\r\n   * @param {number} x X-轴方向平移距离\r\n   * @param {number} y Y-轴方向平移距离\r\n   * @param {number} z Z-轴方向平移距离\r\n   * @return {Matrix4} 返回实例本身\r\n   * */\r\n  setTranslate(x: number, y: number, z: number) {\r\n    const e = this.elements;\r\n    e[0] = 1;  e[4] = 0;  e[8]  = 0;  e[12] = x;\r\n    e[1] = 0;  e[5] = 1;  e[9]  = 0;  e[13] = y;\r\n    e[2] = 0;  e[6] = 0;  e[10] = 1;  e[14] = z;\r\n    e[3] = 0;  e[7] = 0;  e[11] = 0;  e[15] = 1;\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * 乘以某个模型矩阵-translation，并把结果赋值给自己\r\n   * @param {number} x X-轴方向平移距离\r\n   * @param {number} y Y-轴方向平移距离\r\n   * @param {number} z Z-轴方向平移距离\r\n   * @return {Matrix4} 返回实例本身\r\n   * */\r\n  translate(x: number, y: number, z: number) {\r\n    const e = this.elements;\r\n    e[12] += e[0] * x + e[4] * y + e[8]  * z;\r\n    e[13] += e[1] * x + e[5] * y + e[9]  * z;\r\n    e[14] += e[2] * x + e[6] * y + e[10] * z;\r\n    e[15] += e[3] * x + e[7] * y + e[11] * z;\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * 把自己设置成一个模型矩阵-rotate\r\n   * @param {number} angle 旋转角度\r\n   * @param {number} x 旋转轴向量的 X 轴坐标\r\n   * @param {number} y 旋转轴向量的 Y 轴坐标\r\n   * @param {number} z 旋转轴向量的 Z 轴坐标\r\n   * @return {Matrix4} 返回实例本身\r\n   * */\r\n  setRotate(angle: number, x: number, y: number, z: number) {\r\n    let e, s, c, len, rlen, nc, xy, yz, zx, xs, ys, zs;\r\n\r\n    angle = Math.PI * angle / 180;\r\n    e = this.elements;\r\n\r\n    s = Math.sin(angle);\r\n    c = Math.cos(angle);\r\n\r\n    if (0 !== x && 0 === y && 0 === z) {\r\n      // Rotation around X axis\r\n      if (x < 0) {\r\n        s = -s;\r\n      }\r\n      e[0] = 1;  e[4] = 0;  e[ 8] = 0;  e[12] = 0;\r\n      e[1] = 0;  e[5] = c;  e[ 9] =-s;  e[13] = 0;\r\n      e[2] = 0;  e[6] = s;  e[10] = c;  e[14] = 0;\r\n      e[3] = 0;  e[7] = 0;  e[11] = 0;  e[15] = 1;\r\n    } else if (0 === x && 0 !== y && 0 === z) {\r\n      // Rotation around Y axis\r\n      if (y < 0) {\r\n        s = -s;\r\n      }\r\n      e[0] = c;  e[4] = 0;  e[ 8] = s;  e[12] = 0;\r\n      e[1] = 0;  e[5] = 1;  e[ 9] = 0;  e[13] = 0;\r\n      e[2] =-s;  e[6] = 0;  e[10] = c;  e[14] = 0;\r\n      e[3] = 0;  e[7] = 0;  e[11] = 0;  e[15] = 1;\r\n    } else if (0 === x && 0 === y && 0 !== z) {\r\n      // Rotation around Z axis\r\n      if (z < 0) {\r\n        s = -s;\r\n      }\r\n      e[0] = c;  e[4] =-s;  e[ 8] = 0;  e[12] = 0;\r\n      e[1] = s;  e[5] = c;  e[ 9] = 0;  e[13] = 0;\r\n      e[2] = 0;  e[6] = 0;  e[10] = 1;  e[14] = 0;\r\n      e[3] = 0;  e[7] = 0;  e[11] = 0;  e[15] = 1;\r\n    } else {\r\n      // Rotation around another axis\r\n      len = Math.sqrt(x*x + y*y + z*z);\r\n      if (len !== 1) {\r\n        rlen = 1 / len;\r\n        x *= rlen;\r\n        y *= rlen;\r\n        z *= rlen;\r\n      }\r\n      nc = 1 - c;\r\n      xy = x * y;\r\n      yz = y * z;\r\n      zx = z * x;\r\n      xs = x * s;\r\n      ys = y * s;\r\n      zs = z * s;\r\n\r\n      e[ 0] = x*x*nc +  c;\r\n      e[ 1] = xy *nc + zs;\r\n      e[ 2] = zx *nc - ys;\r\n      e[ 3] = 0;\r\n\r\n      e[ 4] = xy *nc - zs;\r\n      e[ 5] = y*y*nc +  c;\r\n      e[ 6] = yz *nc + xs;\r\n      e[ 7] = 0;\r\n\r\n      e[ 8] = zx *nc + ys;\r\n      e[ 9] = yz *nc - xs;\r\n      e[10] = z*z*nc +  c;\r\n      e[11] = 0;\r\n\r\n      e[12] = 0;\r\n      e[13] = 0;\r\n      e[14] = 0;\r\n      e[15] = 1;\r\n    }\r\n\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * 乘以某个模型矩阵-rotate，并把结果赋值给自己\r\n   * @param {number} angle 旋转角度\r\n   * @param {number} x 旋转轴向量的 X 轴坐标\r\n   * @param {number} y 旋转轴向量的 Y 轴坐标\r\n   * @param {number} z 旋转轴向量的 Z 轴坐标\r\n   * @return {Matrix4} 返回实例本身\r\n   * */\r\n  rotate(angle: number, x: number, y: number, z: number) {\r\n    return this.multiply(new Matrix4().setRotate(angle, x, y, z));\r\n  }\r\n\r\n  /**\r\n   * 把自己设置成一个视图矩阵\r\n   * @param {number} eyeX 视点的 X 坐标\r\n   * @param {number} eyeY 视点的 Y 坐标\r\n   * @param {number} eyeZ 视点的 Z 坐标\r\n   * @param {number} centerX 视线目标的 X 坐标\r\n   * @param {number} centerY 视线目标的 Y 坐标\r\n   * @param {number} centerZ 视线目标的 Z 坐标\r\n   * @param {number} upX 上方向向量的 X 轴分量\r\n   * @param {number} upY 上方向向量的 Y 轴分量\r\n   * @param {number} upZ 上方向向量的 Z 轴分量\r\n   * @return {Matrix4} 返回实例本身\r\n   * */\r\n  setLookAt(\r\n    eyeX: number, eyeY: number, eyeZ: number,\r\n    centerX: number, centerY: number, centerZ: number,\r\n    upX: number, upY: number, upZ: number\r\n  ) {\r\n    let e, fx, fy, fz, rlf, sx, sy, sz, rls, ux, uy, uz;\r\n\r\n    fx = centerX - eyeX;\r\n    fy = centerY - eyeY;\r\n    fz = centerZ - eyeZ;\r\n\r\n    // Normalize f.\r\n    rlf = 1 / Math.sqrt(fx*fx + fy*fy + fz*fz);\r\n    fx *= rlf;\r\n    fy *= rlf;\r\n    fz *= rlf;\r\n\r\n    // Calculate cross product of f and up.\r\n    sx = fy * upZ - fz * upY;\r\n    sy = fz * upX - fx * upZ;\r\n    sz = fx * upY - fy * upX;\r\n\r\n    // Normalize s.\r\n    rls = 1 / Math.sqrt(sx*sx + sy*sy + sz*sz);\r\n    sx *= rls;\r\n    sy *= rls;\r\n    sz *= rls;\r\n\r\n    // Calculate cross product of s and f.\r\n    ux = sy * fz - sz * fy;\r\n    uy = sz * fx - sx * fz;\r\n    uz = sx * fy - sy * fx;\r\n\r\n    // Set to this.\r\n    e = this.elements;\r\n    e[0] = sx;\r\n    e[1] = ux;\r\n    e[2] = -fx;\r\n    e[3] = 0;\r\n\r\n    e[4] = sy;\r\n    e[5] = uy;\r\n    e[6] = -fy;\r\n    e[7] = 0;\r\n\r\n    e[8] = sz;\r\n    e[9] = uz;\r\n    e[10] = -fz;\r\n    e[11] = 0;\r\n\r\n    e[12] = 0;\r\n    e[13] = 0;\r\n    e[14] = 0;\r\n    e[15] = 1;\r\n\r\n    // Translate.\r\n    return this.translate(-eyeX, -eyeY, -eyeZ);\r\n  }\r\n\r\n  /**\r\n   * 乘以某个视图矩阵，并把结果赋值给自己\r\n   * @param {number} eyeX 视点的 X 坐标\r\n   * @param {number} eyeY 视点的 Y 坐标\r\n   * @param {number} eyeZ 视点的 Z 坐标\r\n   * @param {number} centerX 视线目标的 X 坐标\r\n   * @param {number} centerY 视线目标的 Y 坐标\r\n   * @param {number} centerZ 视线目标的 Z 坐标\r\n   * @param {number} upX 上方向向量的 X 轴分量\r\n   * @param {number} upY 上方向向量的 Y 轴分量\r\n   * @param {number} upZ 上方向向量的 Z 轴分量\r\n   * @return {Matrix4} 返回实例本身\r\n   * */\r\n  lookAt(\r\n    eyeX: number, eyeY: number, eyeZ: number,\r\n    centerX: number, centerY: number, centerZ: number,\r\n    upX: number, upY: number, upZ: number\r\n  ) {\r\n    return this.multiply(new Matrix4().setLookAt(eyeX, eyeY, eyeZ, centerX, centerY, centerZ, upX, upY, upZ));\r\n  }\r\n}\r\n","/**\r\n * 把一个角度换算成 [0, 360) 区间的值\r\n * @param {number} angle 原始角度\r\n * @return {number} 转换后的角度\r\n * */\r\nexport function angleIn360(angle: number): number {\r\n  let result = angle % 360;\r\n  if (result < 0) result += 360;\r\n  return result;\r\n}\r\n\r\n/**\r\n * 把一个角度换算成弧度制\r\n * @param {number} angle 原始角度\r\n * @return {number} 转换后的弧度\r\n * */\r\nexport function angle2PI(angle: number): number {\r\n  return angle * (2 * Math.PI / 360);\r\n}\r\n\r\n/**\r\n * 把一个弧度算成角度制，取整\r\n * @param {number} pi 原始弧度\r\n * @return {number} 转换后的角度\r\n * */\r\nexport function PI2Angle(pi: number): number {\r\n  return pi / (2 * Math.PI / 360);\r\n}\r\n","import {DefaultAnimDuration, DefaultFovy, DefaultMovingRate, DefaultYRange} from \"../../config/index\";\r\nimport Pano from \"../Pano\";\r\nimport Matrix4 from \"../../utils/matrix\";\r\nimport Scene, {SceneAngle, SceneAngleChangeCallback, SceneListenerType, VoidFunction} from \"./Scene\";\r\nimport HotSpot from \"../HotSpot\";\r\nimport {angleIn360, PI2Angle} from \"../../utils/math\";\r\nimport {TextureSource} from \"../../types/index\";\r\n\r\n/**\r\n * 场景变化的动画参数\r\n * @param {boolean} animation 是否执行动画\r\n * @param {number} duration 动画执行时间\r\n * @param {VoidFunction} callback 执行完动画后的回调函数\r\n * */\r\ninterface AnimationOptions {\r\n  animation?: boolean,\r\n  duration?: number,\r\n  callback?: VoidFunction,\r\n}\r\n\r\nexport default class BaseScene implements Scene {\r\n  /**\r\n   * @property {number} pitch 俯仰角-绕 x 轴旋转角度\r\n   * */\r\n  pitch = 0.0;\r\n  /**\r\n   * @property {number} yaw 偏航角-绕 y 轴旋转角度\r\n   * */\r\n  yaw = 0.0;\r\n\r\n  /**\r\n   * 视点参数\r\n   * position: 视点位置\r\n   * target: 视线方向\r\n   * up: 上方向\r\n   * */\r\n  eye = {\r\n    position: { x: 0.0, y: 0.0, z: 0.0 },\r\n    target: { x: 0.0, y: 0.0, z: -1.0 },\r\n    up: { x: 0.0, y: 1.0, z: 0.0 },\r\n  }\r\n\r\n  /**\r\n   * @property {[number, number]} yRange 俯仰可视范围角度\r\n   * */\r\n  yRange = DefaultYRange;\r\n\r\n  /**\r\n   * @property {number} fovy 静态可视范围角度\r\n   * */\r\n  fovy = DefaultFovy;\r\n\r\n  /**\r\n   * @property {boolean} dragging 是否正在被拖拽\r\n   * 鼠标按下置为 true；鼠标释放置为 false\r\n   * */\r\n  dragging = false;\r\n  /**\r\n   * @property {{x: number, y: number}} dragStartPoint 开始拖拽的起点\r\n   * */\r\n  dragStartPoint = { x: 0, y: 0 };\r\n\r\n  /**\r\n   * @property {boolean} angling 是否正在进行转动\r\n   * */\r\n  angling = false;\r\n\r\n  /**\r\n   * @property {boolean} fovying 是否正在进行移动（fovy 切换）\r\n   * */\r\n  fovying = false;\r\n\r\n  /**\r\n   * 获取 pitch 可移动范围\r\n   * */\r\n  getPitchRange() {\r\n    const fovyHalf = this.fovy / 2;\r\n    return [this.yRange[0] + fovyHalf, this.yRange[1] - fovyHalf];\r\n  }\r\n\r\n  /**\r\n   * @property {Pano} pano 父容器Pano\r\n   * */\r\n  pano: Pano;\r\n\r\n  /**\r\n   * 计算 mvp 矩阵，并传递到着色器中变量\r\n   * */\r\n  setMvpMatrix() {\r\n    const { gl } = this.pano;\r\n    const {\r\n      position: { x: eyeX, y: eyeY, z: eyeZ },\r\n      target: { x: centerX, y: centerY, z: centerZ },\r\n      up: { x: upX, y: upY, z: upZ },\r\n    } = this.eye;\r\n    const u_MvpMatrix = gl.getUniformLocation(gl.program, 'u_MvpMatrix');\r\n    if (!u_MvpMatrix) {\r\n      throw new Error('获取 mvp 矩阵地址失败');\r\n    }\r\n\r\n    const { width, height } = this.pano.canvas;\r\n    const mvpMatrix = new Matrix4();\r\n    mvpMatrix.setPerspective(this.fovy, width / height, 0.01, 10.0);\r\n    mvpMatrix.lookAt(eyeX, eyeY, eyeZ, centerX, centerY, centerZ, upX, upY, upZ);\r\n    mvpMatrix.rotate(-this.pitch, 1, 0, 0);\r\n    mvpMatrix.rotate(this.yaw, 0, 1, 0);\r\n\r\n    gl.uniformMatrix4fv(u_MvpMatrix, false, mvpMatrix.elements);\r\n  }\r\n\r\n  /**\r\n   * 角度变化回调函数集合\r\n   * */\r\n  angleChangeCallbacks: SceneAngleChangeCallback[] = [];\r\n\r\n  /**\r\n   * @property {HotSpot[]} hotSpots 热点\r\n   * */\r\n  hotSpots: HotSpot[] = [];\r\n\r\n  /**\r\n   * 添加回调函数\r\n   * @param type {SceneListenerType} 事件类型，预定义好的\r\n   * @param  callback {SceneAngleChangeCallback} 回调函数\r\n   * */\r\n  addListener(type: SceneListenerType, callback: SceneAngleChangeCallback) {\r\n    switch (type) {\r\n      case \"angleChange\":\r\n        this.angleChangeCallbacks.push(callback);\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n  /**\r\n   * 移除监听\r\n   * @param type {SceneListenerType} 事件类型，预定义好的\r\n   * @param  callback {SceneAngleChangeCallback} 回调函数\r\n   * */\r\n  removeListener(type: SceneListenerType, callback: SceneAngleChangeCallback) {\r\n    switch (type) {\r\n      case \"angleChange\":\r\n        this.angleChangeCallbacks = this.angleChangeCallbacks.filter(item => item !== callback);\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n  /**\r\n   * 移除所有监听\r\n   * */\r\n  removeAllListeners() {\r\n    this.angleChangeCallbacks = [];\r\n  }\r\n\r\n  /**\r\n   * 销毁\r\n   * */\r\n  destroy() {\r\n    // 移除热点\r\n    if (this.hotSpots && this.hotSpots.length) this.hotSpots.forEach(hotSpot => hotSpot.destroy());\r\n  }\r\n\r\n  /**\r\n   * 获取当前角度\r\n   * @return {SceneAngle} 俯仰角/偏航角\r\n   * */\r\n  getAngle(): SceneAngle {\r\n    return {\r\n      pitch: this.pitch,\r\n      yaw: this.yaw,\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 获取视角范围\r\n   * @return {number} 视角范围\r\n   * */\r\n  getFovy(): number {\r\n    return this.fovy;\r\n  }\r\n\r\n  /**\r\n   * 渲染热点\r\n   * @param {number} deltaPitch 俯仰角偏移量\r\n   * @param {number} deltaYaw 偏航角偏移量\r\n   * */\r\n  renderHotSpots(deltaPitch: number = 0, deltaYaw: number = 0) {\r\n    if (this.hotSpots && this.hotSpots.length) {\r\n      this.hotSpots.forEach(hotSpot => hotSpot.render(-deltaPitch, deltaYaw, this.pano, this));\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 执行角度变化后的回调函数\r\n   * */\r\n  executeAngleChangeCallbacks() {\r\n    this.angleChangeCallbacks.forEach(callback => callback({ pitch: this.pitch, yaw: this.yaw }));\r\n  }\r\n\r\n  /**\r\n   * 绘制前的准备工作\r\n   * 1. 确定最终角度，包括超出范围后的计算\r\n   * 2. 设置 mvp 矩阵\r\n   * */\r\n  beforeDrawElements(deltaPitch: number = 0, deltaYaw: number = 0) {\r\n    const { gl } = this.pano;\r\n    this.pitch += deltaPitch;\r\n    const PitchRange = this.getPitchRange();\r\n    if (this.pitch < PitchRange[0]) this.pitch = PitchRange[0];\r\n    if (this.pitch > PitchRange[1]) this.pitch = PitchRange[1];\r\n    this.yaw += deltaYaw;\r\n    this.yaw = angleIn360(this.yaw);\r\n\r\n    this.setMvpMatrix();\r\n\r\n    gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\r\n  }\r\n\r\n  /**\r\n   * 添加热点\r\n   * @param {HotSpot | HotSpot[]} hotSpots 待添加的热点\r\n   * */\r\n  addHotSpots(hotSpots: HotSpot | HotSpot[]) {\r\n    // 如果添加热点的时候，scene 已经有偏移了，需要修补这个偏移量\r\n    const pitchAngle = (spot: HotSpot) => {\r\n      spot.pitch -= this.pitch;\r\n      spot.yaw -= this.yaw;\r\n    }\r\n    if (hotSpots instanceof Array) {\r\n      hotSpots.forEach(spot => pitchAngle(spot))\r\n      this.hotSpots = this.hotSpots.concat(hotSpots);\r\n    } else {\r\n      pitchAngle(hotSpots);\r\n      this.hotSpots.push(hotSpots as HotSpot);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 绘制变换后的场景和热点\r\n   * @param deltaPitch {number} 场景的俯仰角偏移值\r\n   * @param deltaYaw {number} 场景的偏航角偏移值\r\n   * */\r\n  draw(deltaPitch: number = 0, deltaYaw: number = 0) {\r\n    this.beforeDrawElements(deltaPitch, deltaYaw);\r\n\r\n    this.drawModel();\r\n\r\n    this.renderHotSpots(deltaPitch, deltaYaw);\r\n\r\n    this.executeAngleChangeCallbacks();\r\n  }\r\n\r\n  /**\r\n   * 场景移动到某一点\r\n   * @param {number} targetX 移动目标点的X坐标\r\n   * @param {number} targetY 移动目标点的X坐标\r\n   * */\r\n  moveTo(targetX: number, targetY: number) {\r\n    const { canvas } = this.pano;\r\n\r\n    const deltaX = this.dragStartPoint.x - targetX;\r\n    const deltaY = this.dragStartPoint.y - targetY;\r\n\r\n    let deltaPitch;\r\n    const PitchRange = this.getPitchRange();\r\n    if (this.pitch <= PitchRange[0] && deltaY <= 0) {\r\n      deltaPitch = 0;\r\n    } else if (this.pitch >= PitchRange[1] && deltaY >= 0) {\r\n      deltaPitch = 0;\r\n    } else {\r\n      deltaPitch = -PI2Angle(Math.atan(deltaY / (canvas.height / 2)));\r\n    }\r\n\r\n    const deltaYaw = PI2Angle(Math.atan(deltaX / (canvas.width / 2)));\r\n    this.draw(deltaPitch * DefaultMovingRate, deltaYaw * DefaultMovingRate);\r\n    this.dragStartPoint = {x: targetX, y: targetY};\r\n  }\r\n\r\n  /**\r\n   * 移动角度偏移量\r\n   * @param deltaPitch {number} 俯仰角偏移量\r\n   * @param deltaYaw {number} 偏航角偏移量\r\n   * @param options {AnimationOptions} 可选动画参数\r\n   * */\r\n  move(deltaPitch: number, deltaYaw: number, options: AnimationOptions = {}) {\r\n    const {animation, callback, duration = DefaultAnimDuration} = options;\r\n    if (animation) {\r\n      this.angling = true;\r\n\r\n      const pitchSpeed = deltaPitch / duration;\r\n      const yawSpeed = deltaYaw / duration;\r\n\r\n      let start = Date.now();\r\n      const startSign = start;\r\n\r\n      const anim = () => {\r\n        requestAnimationFrame(() => {\r\n          const now = Date.now();\r\n          const deltaTime = now - start;\r\n          if (now < startSign + duration) {\r\n            this.draw(pitchSpeed * deltaTime, yawSpeed * deltaTime);\r\n            start = now;\r\n            anim();\r\n          } else {\r\n            this.angling = false;\r\n            if (callback) callback();\r\n          }\r\n        });\r\n      };\r\n      anim();\r\n    } else {\r\n      this.draw(deltaPitch, deltaYaw);\r\n      if (callback) callback();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 设置到某个角度\r\n   * @param angle {SceneAngle} 目标角度值\r\n   * @param options {AnimationOptions} 可选动画参数\r\n   * */\r\n  setAngle(angle: SceneAngle, options?: AnimationOptions) {\r\n    const { pitch: targetPitch, yaw: targetYaw } = angle;\r\n    this.move(targetPitch - this.pitch, targetYaw - this.yaw, options);\r\n  }\r\n\r\n  /**\r\n   * 设置到视角\r\n   * @param fovy {number} 目标视角\r\n   * @param options {AnimationOptions} 可选动画参数\r\n   * */\r\n  setFovy(fovy: number, options: AnimationOptions = {}) {\r\n    if (fovy <= 0 || fovy >= 180) {\r\n      throw new Error('视角范围超出(0, 180)限制');\r\n    }\r\n    const { animation, callback, duration = DefaultAnimDuration } = options;\r\n    if (animation) {\r\n      this.fovying = true;\r\n\r\n      const fovySpeed = (fovy - this.fovy) / duration;\r\n\r\n      let start = Date.now();\r\n      const startSign = start;\r\n\r\n      const anim = () => {\r\n        requestAnimationFrame(() => {\r\n          const now = Date.now();\r\n          const deltaTime = now - start;\r\n          if (now < startSign + duration) {\r\n            this.fovy += (fovySpeed * deltaTime);\r\n            this.draw();\r\n            start = now;\r\n            anim();\r\n          } else {\r\n            this.fovying = false;\r\n            if (callback) callback();\r\n          }\r\n        });\r\n      };\r\n      anim();\r\n    } else {\r\n      this.fovy = fovy;\r\n      this.draw();\r\n      if (callback) callback();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 点击热点回调，执行切换场景前的动画\r\n   * @param {HotSpot} hotSpot 目标热点\r\n   * */\r\n  onHotSpotClick(hotSpot: HotSpot) {\r\n    this.move(hotSpot.pitch, hotSpot.yaw > 180 ? -(360 - hotSpot.yaw) : hotSpot.yaw, {\r\n      animation: true,\r\n      callback: () => this.pano.switchScene(hotSpot.target),\r\n    });\r\n    this.setFovy(this.fovy - 6, {\r\n      animation: true,\r\n      callback: () => this.fovy = DefaultFovy,\r\n    });\r\n  }\r\n\r\n  /**\r\n   * PC端和移动端的移动事件绑定\r\n   * */\r\n  eventBind() {\r\n    const { canvas } = this.pano;\r\n    // pc 端事件\r\n    canvas.onmousedown = (ev) => {\r\n      this.dragging = true;\r\n      canvas.style.cursor = 'grabbing';\r\n      this.dragStartPoint = {\r\n        x: ev.offsetX,\r\n        y: ev.offsetY,\r\n      };\r\n    };\r\n    canvas.onmouseup = () => {\r\n      this.dragging = false;\r\n      canvas.style.cursor = 'grab';\r\n    }\r\n    canvas.onmouseout = () => {\r\n      this.dragging = false;\r\n      canvas.style.cursor = 'grab';\r\n    }\r\n    canvas.onmousemove = (ev) => {\r\n      if (this.dragging && !this.angling && !this.fovying) this.moveTo(ev.offsetX, ev.offsetY);\r\n    };\r\n    // 手机端事件\r\n    canvas.ontouchstart = (ev) => {\r\n      const { top, left } = canvas.getBoundingClientRect();\r\n      const targetX = ev.changedTouches[0].clientX - left;\r\n      const targetY = ev.changedTouches[0].clientY - top;\r\n      this.dragStartPoint = {x: targetX, y: targetY,};\r\n    };\r\n    canvas.ontouchmove = (ev) => {\r\n      // 通过和 canvas 的视窗相对位置计算\r\n      const { top, left } = canvas.getBoundingClientRect();\r\n      const targetX = ev.changedTouches[0].clientX - left;\r\n      const targetY = ev.changedTouches[0].clientY - top;\r\n      if (!this.angling && !this.fovying) this.moveTo(targetX, targetY);\r\n    };\r\n  }\r\n\r\n  /**\r\n   * @property {TextureSource[] | TextureSource} textures 纹理资源：在各个子类中重写\r\n   * */\r\n  textures: TextureSource[] | TextureSource;\r\n\r\n  /**\r\n   * 渲染模型：在各个子类中重写\r\n   * */\r\n  drawModel() {}\r\n\r\n  /**\r\n   * 渲染模型：在各个子类中重写\r\n   * @param textures {TextureSource[] | TextureSource} 替换后的纹理资源\r\n   * */\r\n  replaceTextures(textures: TextureSource[] | TextureSource) {}\r\n\r\n  /**\r\n   * 渲染到 pano：在各个子类中重写\r\n   * @param {Pano} pano 父容器\r\n   * */\r\n  render(pano: Pano) {\r\n    this.pano = pano;\r\n\r\n    // 在 render 里面重新绑定事件，其他 scene 的事件都会注销\r\n    this.eventBind();\r\n  }\r\n\r\n}\r\n","import {initArrayBuffer} from \"../utils/process\";\r\nimport {TextureSource, WebGLRenderingContextWithProgram} from \"../types/index\";\r\nimport Pano from \"./Pano\";\r\nimport {getTexImageSource} from \"./resource\";\r\nimport BaseScene from \"./interface/BaseScene\";\r\nimport {SceneAngle} from \"./interface/Scene\";\r\n\r\n/**\r\n * 每个面的编号 0-f 1-r 2-u 3-l 4-d 5-b\r\n * */\r\ntype Unit = 0 | 1 | 2 | 3 | 4 | 5;\r\n\r\n/**\r\n * 场景类，提供全景画面\r\n * 立方体\r\n *    v6----- v5\r\n *   /|      /|\r\n *  v1------v0|\r\n *  | |     | |\r\n *  | |v7---|-|v4\r\n *  |/      |/\r\n *  v2------v3\r\n * */\r\nexport default class CubeScene extends BaseScene {\r\n\r\n    /**\r\n     * @static {Float32Array} vertices 立方体顶点坐标\r\n     * */\r\n    static vertices = new Float32Array([\r\n        1.0,  1.0,  1.0,    -1.0,  1.0,  1.0,    -1.0, -1.0,  1.0,     1.0, -1.0,  1.0,  // v0-v1-v2-v3 front\r\n        1.0,  1.0,  1.0,     1.0, -1.0,  1.0,     1.0, -1.0, -1.0,     1.0,  1.0, -1.0,  // v0-v3-v4-v5 right\r\n        1.0,  1.0,  1.0,     1.0,  1.0, -1.0,    -1.0,  1.0, -1.0,    -1.0,  1.0,  1.0,  // v0-v5-v6-v1 up\r\n       -1.0,  1.0,  1.0,    -1.0,  1.0, -1.0,    -1.0, -1.0, -1.0,    -1.0, -1.0,  1.0,  // v1-v6-v7-v2 left\r\n       -1.0, -1.0, -1.0,     1.0, -1.0, -1.0,     1.0, -1.0,  1.0,    -1.0, -1.0,  1.0,  // v7-v4-v3-v2 down\r\n        1.0, -1.0, -1.0,    -1.0, -1.0, -1.0,    -1.0,  1.0, -1.0,     1.0,  1.0, -1.0   // v4-v7-v6-v5 back\r\n    ]);\r\n\r\n    /**\r\n     * @static {Float32Array} texs 顶点对应的纹理坐标\r\n     * */\r\n    static texs = new Float32Array([\r\n        0.0, 1.0,    1.0, 1.0,    1.0, 0.0,    0.0, 0.0,\r\n        1.0, 1.0,    1.0, 0.0,    0.0, 0.0,    0.0, 1.0,\r\n        1.0, 1.0,    1.0, 0.0,    0.0, 0.0,    0.0, 1.0,\r\n        0.0, 1.0,    1.0, 1.0,    1.0, 0.0,    0.0, 0.0,\r\n        0.0, 1.0,    1.0, 1.0,    1.0, 0.0,    0.0, 0.0,\r\n        1.0, 0.0,    0.0, 0.0,    0.0, 1.0,    1.0, 1.0,\r\n    ]);\r\n\r\n    /**\r\n     * @static {Uint8Array[]} allFacesIndices 六个面的顶点索引数组\r\n     * */\r\n    static allFacesIndices = [\r\n        new Uint8Array([0,  1,   2,     0,  2,  3]), // f\r\n        new Uint8Array([4,  5,   6,     4,  6,  7]), // r\r\n        new Uint8Array([8,  9,  10,     8, 10, 11]), // u\r\n        new Uint8Array([12, 13, 14,    12, 14, 15]), // l\r\n        new Uint8Array([16, 17, 18,    16, 18, 19]), // d\r\n        new Uint8Array([20, 21, 22,    20, 22, 23]), // b\r\n    ];\r\n\r\n    /**\r\n     * @static {WebGLUniformLocation} u_Face 的地址\r\n     * 第一次渲染的时候被赋值\r\n     * */\r\n    static u_Face?: WebGLUniformLocation;\r\n\r\n    /**\r\n     * 将每个面的纹理贴图赋值给每个面的 sampler\r\n     * @param {WebGLRenderingContextWithProgram} gl WebGL 上下文\r\n     * @param {TexImageSource} image 图像资源\r\n     * @param {number} unit 每个面的编号 0-f 1-r 2-u 3-l 4-d 5-b\r\n     * */\r\n    static initTexture(gl: WebGLRenderingContextWithProgram, image: TexImageSource, unit: Unit) {\r\n        const texture = gl.createTexture();\r\n        if (!texture) {\r\n            throw new Error('创建纹理对象失败');\r\n        }\r\n        let texUnit = gl.TEXTURE0;\r\n        let samplerPrefix = 'f';\r\n        switch (unit) {\r\n            case 0:\r\n                texUnit = gl.TEXTURE0;\r\n                samplerPrefix = 'f';\r\n                break;\r\n            case 1:\r\n                texUnit = gl.TEXTURE1;\r\n                samplerPrefix = 'r';\r\n                break;\r\n            case 2:\r\n                texUnit = gl.TEXTURE2;\r\n                samplerPrefix = 'u';\r\n                break;\r\n            case 3:\r\n                texUnit = gl.TEXTURE3;\r\n                samplerPrefix = 'l';\r\n                break;\r\n            case 4:\r\n                texUnit = gl.TEXTURE4;\r\n                samplerPrefix = 'd';\r\n                break;\r\n            case 5:\r\n                texUnit = gl.TEXTURE5;\r\n                samplerPrefix = 'b';\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n        gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, 1);\r\n        gl.activeTexture(texUnit);\r\n        gl.bindTexture(gl.TEXTURE_2D, texture);\r\n        gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, image);\r\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\r\n\r\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\r\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\r\n\r\n        const u_Sampler = gl.getUniformLocation(gl.program, `${samplerPrefix}_Sampler`);\r\n        if (!u_Sampler) {\r\n            throw new Error(`获取 ${u_Sampler} 地址失败`);\r\n        }\r\n        gl.uniform1i(u_Sampler, unit);\r\n    }\r\n\r\n    /**\r\n     * 获取 u_Face 缓存\r\n     * @param {WebGLRenderingContextWithProgram} gl WebGL 上下文\r\n     * @return {WebGLUniformLocation} u_Face 地址\r\n     * */\r\n    static getUFaceLocation(gl: WebGLRenderingContextWithProgram): WebGLUniformLocation {\r\n        if (!CubeScene.u_Face) {\r\n            const u_Face = gl.getUniformLocation(gl.program, 'u_Face');\r\n            if (!u_Face) {\r\n                throw new Error('获取 u_Face 地址失败');\r\n            }\r\n            CubeScene.u_Face = u_Face;\r\n        }\r\n        return CubeScene.u_Face;\r\n    }\r\n\r\n    /**\r\n     * @property {TextureSource[]} textures 六个面的纹理图片，按照 f r u l d b 的顺序\r\n     * */\r\n    textures: TextureSource[] = [];\r\n\r\n    /**\r\n     * @constructor 构造函数\r\n     * @param {string[]} textures 六个面的纹理图片，按照 f r u l d b 的顺序\r\n     * @param {SceneAngle} defaultAngle 默认展示角度\r\n     * */\r\n    constructor(textures: TextureSource[], defaultAngle?: SceneAngle) {\r\n        super();\r\n        this.textures = textures;\r\n        if (defaultAngle) {\r\n            const { pitch, yaw } = defaultAngle;\r\n            if (pitch) this.pitch = pitch;\r\n            if (yaw) this.yaw = yaw;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 渲染立方体\r\n     * */\r\n    drawModel() {\r\n        CubeScene.allFacesIndices.forEach((faceIndices, index) => {\r\n            this.renderFace(faceIndices, index as Unit);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * 加载纹理贴图\r\n     * @return {Promise<TexImageSource[]>} 图像资源\r\n     * */\r\n    private loadTextures(): Promise<TexImageSource[]> {\r\n        // 交换前后，左右\r\n        const [f, r, u, l, d, b] = this.textures;\r\n        const sourceOrder = [b, r, u, l, d, f];\r\n        // 删选出资源地址类型的，然后加载图片\r\n        const srcSources: { src: string, index: number }[] = [];\r\n        sourceOrder.forEach((source, index) => {\r\n            if (typeof source === 'string') {\r\n                srcSources.push({\r\n                    src: source,\r\n                    index,\r\n                });\r\n            }\r\n        });\r\n        return getTexImageSource(srcSources.map(item => item.src)).then(images => {\r\n            // 拼接返回所有的 TexImageSource 类型\r\n            return sourceOrder.map(source => {\r\n                if (typeof source === 'string') {\r\n                    return images.shift();\r\n                } else {\r\n                    return source;\r\n                }\r\n            });\r\n        });\r\n    }\r\n\r\n    /**\r\n     * 渲染立方体的其中一面\r\n     * @param {Uint8Array} indices 该面的顶点索引\r\n     * @param {Unit} unit 每个面的编号\r\n     * */\r\n    private renderFace(indices: Uint8Array, unit: Unit) {\r\n        const { gl } = this.pano;\r\n        const indexBuffer = gl.createBuffer();\r\n        if (!indexBuffer) {\r\n            throw new Error('创建索引缓冲区对象失败');\r\n        }\r\n        gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, indexBuffer);\r\n        gl.bufferData(gl.ELEMENT_ARRAY_BUFFER, indices, gl.STATIC_DRAW);\r\n\r\n        gl.uniform1i(CubeScene.getUFaceLocation(gl), unit);\r\n\r\n        gl.drawElements(gl.TRIANGLES, indices.length, gl.UNSIGNED_BYTE, 0);\r\n    }\r\n\r\n    /**\r\n     * 更改纹理重新渲染\r\n     * @param {TextureSource[]} textures 纹理资源集合，按照 f r u l d b 的顺序\r\n     * */\r\n    replaceTextures(textures: TextureSource[]) {\r\n        this.textures = textures;\r\n        this.render(this.pano);\r\n    }\r\n\r\n    /**\r\n     * 渲染到 pano\r\n     * @param {Pano} pano 父容器\r\n     * */\r\n    render(pano: Pano) {\r\n        super.render(pano);\r\n\r\n        const { gl } = this.pano;\r\n        initArrayBuffer(gl, CubeScene.vertices, 3, gl.FLOAT, 'a_Position');\r\n        initArrayBuffer(gl, CubeScene.texs, 2, gl.FLOAT, 'a_TexCoord');\r\n        this.loadTextures().then((images) => {\r\n            // [imgF, imgR, imgU, imgL, imgD, imgB]\r\n            images.forEach((img, index) => {\r\n                if (index <= 5) CubeScene.initTexture(gl, img, index as Unit);\r\n            });\r\n            this.draw();\r\n        });\r\n    }\r\n}\r\n","import {TextureSource, WebGLRenderingContextWithProgram} from \"../types/index\";\r\nimport BaseScene from \"./interface/BaseScene\";\r\nimport {initArrayBuffer} from \"../utils/process\";\r\nimport Pano from \"./Pano\";\r\nimport {getSingleTexImageSource} from \"./resource\";\r\nimport {SceneAngle} from \"./interface/Scene\";\r\n\r\nexport default class SphereScene extends BaseScene {\r\n\r\n  /**\r\n   * @static {number} sections 球体经纬被切分的份数\r\n   * */\r\n  static sections = 60;\r\n\r\n  /**\r\n   * @static\r\n   * @return {{vertices, texs, indices}} 顶点坐标，纹理坐标，顶点索引\r\n   * */\r\n  static get verticeTexIndices() {\r\n    const verticesArray: number[] = [];\r\n    const texsArray: number[] = [];\r\n    const indicesArray: number[] = [];\r\n\r\n    let aj, sj, cj, ai, si, ci, p1, p2;\r\n    for (let j = 0; j <= SphereScene.sections; j++) {\r\n      aj = j * Math.PI / SphereScene.sections;\r\n      sj = Math.sin(aj);\r\n      cj = Math.cos(aj);\r\n      for (let i = 0; i <= SphereScene.sections; i++) {\r\n        ai = i * 2 * Math.PI / SphereScene.sections;\r\n        si = Math.sin(ai);\r\n        ci = Math.cos(ai);\r\n\r\n        // 顶点坐标\r\n        verticesArray.push(si * sj, cj, ci * sj);\r\n\r\n        // 纹理坐标\r\n        texsArray.push(i / SphereScene.sections, (SphereScene.sections - j) / SphereScene.sections);\r\n\r\n        if (j < SphereScene.sections && i < SphereScene.sections) {\r\n          // 顶点索引\r\n          p1 = j * (SphereScene.sections + 1) + i;\r\n          p2 = p1 + (SphereScene.sections + 1);\r\n          indicesArray.push(p1, p2, p1 + 1, p1 + 1, p2, p2 + 1);\r\n        }\r\n      }\r\n    }\r\n\r\n    const vertices = new Float32Array(verticesArray);\r\n    const indices = new Uint32Array(indicesArray);\r\n    const texs = new Float32Array(texsArray);\r\n\r\n    return {vertices, texs, indices};\r\n  };\r\n\r\n  /**\r\n   * 将每个面的纹理贴图赋值给每个面的 sampler\r\n   * @param {WebGLRenderingContextWithProgram} gl WebGL 上下文\r\n   * @param {TexImageSource} image 图像资源\r\n   * */\r\n  static initTexture(gl: WebGLRenderingContextWithProgram, image: TexImageSource) {\r\n    const texture = gl.createTexture();\r\n    if (!texture) {\r\n      throw new Error('创建纹理对象失败');\r\n    }\r\n    gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, 1);\r\n    gl.activeTexture(gl.TEXTURE0);\r\n    gl.bindTexture(gl.TEXTURE_2D, texture);\r\n    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, image);\r\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\r\n\r\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\r\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\r\n\r\n    const u_Sampler = gl.getUniformLocation(gl.program, 'u_Sampler');\r\n    if (!u_Sampler) {\r\n      throw new Error(`获取 u_Sampler 地址失败`);\r\n    }\r\n    gl.uniform1i(u_Sampler, 0);\r\n  }\r\n\r\n  /**\r\n   * @property {TextureSource} textures 2:1球体纹理图\r\n   * */\r\n  textures: TextureSource;\r\n\r\n  /**\r\n   * @constructor 构造函数\r\n   * @param {string} texture 宽高比2:1的纹理图片\r\n   * @param {SceneAngle} defaultAngle 默认展示角度\r\n   * */\r\n  constructor(texture: TextureSource, defaultAngle?: SceneAngle) {\r\n    super();\r\n    this.textures = texture;\r\n    if (defaultAngle) {\r\n      const { pitch, yaw } = defaultAngle;\r\n      if (pitch) this.pitch = pitch;\r\n      if (yaw) this.yaw = yaw;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 渲染球体\r\n   * */\r\n  drawModel() {\r\n    const { indices } = SphereScene.verticeTexIndices;\r\n    const { gl } = this.pano;\r\n    const indexBuffer = gl.createBuffer();\r\n    if (!indexBuffer) {\r\n      throw new Error('创建索引缓冲区对象失败');\r\n    }\r\n    gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, indexBuffer);\r\n    gl.bufferData(gl.ELEMENT_ARRAY_BUFFER, indices, gl.STATIC_DRAW);\r\n    if (gl.getExtension(\"OES_element_index_uint\")) {\r\n      gl.drawElements(gl.TRIANGLES, indices.length, gl.UNSIGNED_INT, 0);\r\n    } else {\r\n      throw new Error('不支持大于 gl.UNSIGNED_BYTE 的 type');\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 加载纹理贴图\r\n   * @return {Promise<TexImageSource>} 图像资源\r\n   * */\r\n  private loadTextures(): Promise<TexImageSource> {\r\n    return typeof this.textures === 'string' ? getSingleTexImageSource(this.textures) : Promise.resolve(this.textures);\r\n  }\r\n\r\n  replaceTextures(texture: TextureSource) {\r\n    this.textures = texture;\r\n    this.render(this.pano);\r\n  }\r\n\r\n  /**\r\n   * 渲染到 pano\r\n   * @param {Pano} pano 父容器\r\n   * */\r\n  render(pano: Pano) {\r\n    super.render(pano);\r\n\r\n    const { gl } = this.pano;\r\n    const { vertices, texs } = SphereScene.verticeTexIndices;\r\n    initArrayBuffer(gl, vertices, 3, gl.FLOAT, 'a_Position');\r\n    initArrayBuffer(gl, texs, 2, gl.FLOAT, 'a_TexCoord');\r\n    this.loadTextures().then((image) => {\r\n      SphereScene.initTexture(gl, image);\r\n      this.draw();\r\n    });\r\n  }\r\n}\r\n","import {createProgram, getWebGLContext, useProgram} from '../utils/cuon-utils';\r\nimport CubeVertShader from '../shader/cube/index.vert';\r\nimport CubeFragShader from '../shader/cube/index.frag';\r\nimport SphereVertShader from '../shader/sphere/index.vert';\r\nimport SphereFragShader from '../shader/sphere/index.frag';\r\nimport {WebGLRenderingContextWithProgram} from \"../types/index\";\r\nimport {loadPanoTexImage} from \"./resource\";\r\nimport Scene from \"./interface/Scene\";\r\nimport CubeScene from \"./CubeScene\";\r\nimport SphereScene from \"./SphereScene\";\r\n\r\ntype SceneChangeCallback = (scene: Scene, index: number) => void;\r\n\r\ntype ListenerType = 'sceneChange';\r\n\r\ntype ListenerCallback = SceneChangeCallback;\r\n\r\n/**\r\n * 容器\r\n * */\r\nexport default class Pano {\r\n\r\n  /**\r\n   * @static {WebGLProgram} CubeGLProgram 立方体 WebGL 程序对象\r\n   * */\r\n  static CubeGLProgram: WebGLProgram;\r\n\r\n  /**\r\n   * @static {WebGLProgram} SphereGLProgram 球体 WebGL 程序对象\r\n   * */\r\n  static SphereGLProgram: WebGLProgram;\r\n\r\n  /**\r\n   * 初始化着色器程序\r\n   * */\r\n  initShader() {\r\n    const scene = this.scenes[this.sceneIndex];\r\n    if (scene instanceof CubeScene) {\r\n      if(!Pano.CubeGLProgram) Pano.CubeGLProgram = createProgram(this.gl, CubeVertShader, CubeFragShader);\r\n      useProgram(this.gl, Pano.CubeGLProgram);\r\n    } else if (scene instanceof SphereScene) {\r\n      if (!Pano.SphereGLProgram) Pano.SphereGLProgram = createProgram(this.gl, SphereVertShader, SphereFragShader);\r\n      useProgram(this.gl, Pano.SphereGLProgram);\r\n    } else {\r\n      throw new Error('当前场景非法');\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @property {HTMLElement} container 容器\r\n   * */\r\n  container: HTMLElement;\r\n\r\n  /**\r\n   * @property {HTMLCanvasElement} canvas canvas节点\r\n   * */\r\n  canvas: HTMLCanvasElement;\r\n\r\n  /**\r\n   * @property {WebGLRenderingContextWithProgram} gl WebGL绘制上下文\r\n   * */\r\n  gl: WebGLRenderingContextWithProgram;\r\n\r\n  /**\r\n   * @property {Scene[]} scenes 场景列表\r\n   * */\r\n  scenes: Scene[] = [];\r\n\r\n  /**\r\n   * @property {number} sceneIndex 当前场景\r\n   * */\r\n  sceneIndex: number = 0;\r\n\r\n  /**\r\n   * 是否已经渲染\r\n   * */\r\n  rendered = false;\r\n\r\n  /**\r\n   * 设置样式\r\n   * */\r\n  setStyle() {\r\n    const { container, canvas } = this;\r\n    container.style.overflow = 'hidden';\r\n    // 如果 container 的 position 不是 absolute 和 fixed，则统一设置成 relative\r\n    const containerPosition = container.style.position;\r\n    if (containerPosition !== 'absolute' && containerPosition !== 'fixed') {\r\n      container.style.position = 'relative';\r\n    }\r\n\r\n    // 开启 HiDPI\r\n    const desiredCSSWidth = container.offsetWidth;\r\n    const desiredCSSHeight = container.offsetHeight;\r\n    const devicePixelRatio = window.devicePixelRatio || 1;\r\n    canvas.width  = desiredCSSWidth  * devicePixelRatio;\r\n    canvas.height = desiredCSSHeight * devicePixelRatio;\r\n    canvas.style.width  = desiredCSSWidth  + \"px\";\r\n    canvas.style.height = desiredCSSHeight + \"px\";\r\n\r\n    // canvas 大小变化后，即时改变 gl 的 viewport\r\n    this.gl.viewport(0, 0, canvas.width, canvas.height);\r\n\r\n    canvas.style.cursor = 'grab';\r\n  }\r\n\r\n  /**\r\n   * container 尺寸变化监听，重新渲染\r\n   * */\r\n  onContainerResize() {\r\n    if (ResizeObserver) {\r\n      const observer = new ResizeObserver(() => {\r\n        if (this.rendered) {\r\n          this.setStyle();\r\n          this.render();\r\n        }\r\n      });\r\n      observer.observe(this.container);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @constructor\r\n   * @param {string} containerId 容器节点id\r\n   * @param {boolean} debug 是否开启debug\r\n   * */\r\n  constructor(containerId: string, debug?: boolean) {\r\n    const container = document.getElementById(containerId);\r\n    if (!container) {\r\n      throw new Error('找不到容器，请确认 id 是否正确');\r\n    }\r\n    this.container = container;\r\n\r\n    const canvas = document.createElement('canvas');\r\n    this.canvas = canvas;\r\n    container.append(canvas);\r\n\r\n    this.gl = getWebGLContext(canvas, debug);\r\n    this.setStyle();\r\n\r\n    this.onContainerResize();\r\n  }\r\n\r\n  /**\r\n   * 场景变化的回调函数\r\n   * */\r\n  sceneChangeCallbacks: SceneChangeCallback[] = [];\r\n  /**\r\n   * 添加回调函数\r\n   * @param {ListenerType} type 监听类型，预定义好的\r\n   * @param {ListenerCallback} callback 回调函数\r\n   * */\r\n  addListener(type: ListenerType, callback: ListenerCallback) {\r\n    switch (type) {\r\n      case \"sceneChange\":\r\n        this.sceneChangeCallbacks.push(callback);\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n  /**\r\n   * 添加回调函数\r\n   * @param {ListenerType} type 监听类型，预定义好的\r\n   * @param {ListenerCallback} callback 回调函数\r\n   * */\r\n  removeListener(type: ListenerType, callback: ListenerCallback) {\r\n    switch (type) {\r\n      case \"sceneChange\":\r\n        this.sceneChangeCallbacks = this.sceneChangeCallbacks.filter(item => item !== callback);\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n  /**\r\n   * 移除所有监听\r\n   * */\r\n  removeAllListeners() {\r\n    this.sceneChangeCallbacks = [];\r\n  }\r\n\r\n  /**\r\n   * 添加场景\r\n   * @param {Scene} scene 场景\r\n   * */\r\n  addScene(scene: Scene) {\r\n    this.scenes.push(scene);\r\n  }\r\n\r\n  /**\r\n   * 切换场景\r\n   * @param {number} sceneIndex 切换后的场景\r\n   * */\r\n  switchScene = (sceneIndex: number) => {\r\n    if (sceneIndex === this.sceneIndex) return;\r\n    const currentScene = this.scenes[this.sceneIndex];\r\n    if (currentScene) currentScene.destroy();\r\n    this.sceneIndex = sceneIndex;\r\n    this.render();\r\n    // 执行回调\r\n    this.sceneChangeCallbacks.forEach(callback => {\r\n      callback(this.scenes[this.sceneIndex], this.sceneIndex);\r\n    });\r\n  }\r\n\r\n  /**\r\n   * 渲染当前 Scene 到 canvas\r\n   * */\r\n  render() {\r\n    const renderScene = () => {\r\n      const currentScene = this.scenes[this.sceneIndex];\r\n      if (!currentScene) {\r\n        throw new Error('当前场景不存在');\r\n      }\r\n      this.initShader();\r\n      const gl = this.gl;\r\n      gl.clearColor(0.0, 0.0, 0.0, 1.0);\r\n      gl.enable(gl.DEPTH_TEST);\r\n      currentScene.render(this);\r\n      this.rendered = true;\r\n    };\r\n    if (!this.rendered) {\r\n      // 先加载纹理\r\n      loadPanoTexImage(this).then(renderScene);\r\n    } else {\r\n      renderScene();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 获取当前场景索引\r\n   * @return {Scene} 当前场景\r\n   * */\r\n  getCurrentScene(): Scene {\r\n    return this.scenes[this.sceneIndex];\r\n  }\r\n\r\n  /**\r\n   * 设置当前场景\r\n   * @param {Scene | number} scene 场景实例，或者场景索引\r\n   * */\r\n  setScene(scene: Scene | number) {\r\n    if (typeof scene === 'number') {\r\n      if (scene < 0 || scene > this.scenes.length - 1) {\r\n        throw new Error('场景索引超出范围');\r\n      }\r\n      this.switchScene(scene);\r\n    } else {\r\n      const index = this.scenes.indexOf(scene);\r\n      if (index === -1) {\r\n        throw new Error('场景不存在');\r\n      }\r\n      this.switchScene(index);\r\n    }\r\n  }\r\n}\r\n","export default \"attribute vec4 a_Position;\\r\\nattribute vec2 a_TexCoord;\\r\\nvarying vec2 v_TexCoord;\\r\\nuniform mat4 u_MvpMatrix;\\r\\n\\r\\nvoid main() {\\r\\n    gl_Position = u_MvpMatrix * a_Position;\\r\\n    v_TexCoord = a_TexCoord;\\r\\n}\\r\\n\";","export default \"precision mediump float;\\r\\n\\r\\nuniform sampler2D f_Sampler;\\r\\nuniform sampler2D r_Sampler;\\r\\nuniform sampler2D u_Sampler;\\r\\nuniform sampler2D l_Sampler;\\r\\nuniform sampler2D d_Sampler;\\r\\nuniform sampler2D b_Sampler;\\r\\nvarying vec2 v_TexCoord;\\r\\n// 标记每个面 0-f 1-r 2-u 3-l 4-d 5-b\\r\\nuniform int u_Face;\\r\\n\\r\\nvoid main() {\\r\\n    if (u_Face == 0) {\\r\\n        gl_FragColor = texture2D(f_Sampler, v_TexCoord);\\r\\n    } else if (u_Face == 1) {\\r\\n        gl_FragColor = texture2D(r_Sampler, v_TexCoord);\\r\\n    } else if (u_Face == 2) {\\r\\n        gl_FragColor = texture2D(u_Sampler, v_TexCoord);\\r\\n    } else if (u_Face == 3) {\\r\\n        gl_FragColor = texture2D(l_Sampler, v_TexCoord);\\r\\n    } else if (u_Face == 4) {\\r\\n        gl_FragColor = texture2D(d_Sampler, v_TexCoord);\\r\\n    } else {\\r\\n        gl_FragColor = texture2D(b_Sampler, v_TexCoord);\\r\\n    }\\r\\n}\\r\\n\";","export default \"attribute vec4 a_Position;\\r\\nattribute vec2 a_TexCoord;\\r\\nvarying vec2 v_TexCoord;\\r\\nuniform mat4 u_MvpMatrix;\\r\\n\\r\\nvoid main() {\\r\\n    gl_Position = u_MvpMatrix * a_Position;\\r\\n    v_TexCoord = a_TexCoord;\\r\\n}\\r\\n\";","export default \"precision mediump float;\\r\\n\\r\\nuniform sampler2D u_Sampler;\\r\\nvarying vec2 v_TexCoord;\\r\\n\\r\\nvoid main() {\\r\\n    gl_FragColor = texture2D(u_Sampler, v_TexCoord);\\r\\n}\\r\\n\";","import {angle2PI, angleIn360} from \"../utils/math\";\r\nimport Pano from \"./Pano\";\r\nimport Scene from \"./interface/Scene\";\r\nimport {DefaultFovy} from \"../config/index\";\r\n\r\n/**\r\n * 热点\r\n * */\r\nexport default class HotSpot {\r\n\r\n  /**\r\n   * @property {HTMLElement} dom 热点元素\r\n   * */\r\n  dom: HTMLElement;\r\n\r\n  /**\r\n   * @property {number} pitch 位置-俯仰角-角度\r\n   * */\r\n  pitch: number;\r\n\r\n  /**\r\n   * @property {number} yaw 位置-偏航角-角度\r\n   * */\r\n  yaw: number;\r\n\r\n  /**\r\n   * @property {number} target 目标场景索引\r\n   * */\r\n  target?: number\r\n\r\n  /**\r\n   * @property {Pano} pano 爷爷容器Pano\r\n   * */\r\n  pano: Pano;\r\n\r\n  /**\r\n   * @property {Scene} scene 父容器Scene\r\n   * */\r\n  scene: Scene;\r\n\r\n  /**\r\n   * @property {(ev: MouseEvent) => any} originOnClick dom 原始的 click 监听函数\r\n   * */\r\n  originOnClick?: (ev: MouseEvent) => any;\r\n\r\n  /**\r\n   * @constructor\r\n   * @param {HTMLElement} dom 热点元素\r\n   * @param {{pitch?: number, yaw?: number, target?: number}} options 可选参数：pitch 位置-俯仰角-角度，范围是 (-90, 90)；yaw 位置-偏航角-角度；target 转场目标场景索引\r\n   * */\r\n  constructor(dom: HTMLElement, options: { pitch?: number, yaw?: number, target?: number, } = {}) {\r\n    const { pitch = 0, yaw = 0, target } = options;\r\n    // 强制 dom 绝对定位\r\n    dom.style.position = 'absolute';\r\n    dom.style.cursor = 'pointer';\r\n    this.dom = dom;\r\n    this.pitch = pitch;\r\n    this.yaw = yaw;\r\n    this.target = target;\r\n    this.originOnClick = dom.onclick;\r\n  }\r\n\r\n  /**\r\n   * 把热点图像插入到容器内\r\n   * @param deltaPitch {number} 场景的俯仰角偏移值\r\n   * @param deltaYaw {number} 场景的偏航角偏移值\r\n   * @param {Pano} pano 爷爷容器\r\n   * @param {Scene} scene 父容器\r\n   * */\r\n  render(deltaPitch: number, deltaYaw: number, pano: Pano, scene: Scene) {\r\n    this.pano = pano;\r\n    this.scene = scene;\r\n\r\n    const { container } = this.pano;\r\n\r\n    // target 有值的时候，给 click 添加默认场景切换操作\r\n    if (this.target || this.target === 0) {\r\n      this.dom.onclick = (ev) => {\r\n        this.scene.onHotSpotClick(this);\r\n        if (this.originOnClick) this.originOnClick(ev);\r\n      };\r\n    }\r\n    container.append(this.dom);\r\n\r\n    const { width, height } = this.dom.getBoundingClientRect();\r\n\r\n    const centerX = (container.offsetWidth - width) / 2;\r\n    const centerY = (container.offsetHeight - height) / 2;\r\n\r\n    const { offsetWidth, offsetHeight } = container;\r\n\r\n    this.pitch += deltaPitch;\r\n    this.yaw -= deltaYaw;\r\n\r\n    /**\r\n     * tan(|pitch|) = deltaTop / 1\r\n     * pitch 的绝对值的正切：y 方向偏移量 / 深度(1)\r\n     * pitch 的绝对值不超过配置的范围\r\n     * deltaTop 的计算结果是归一化的，换算成像素值：* canvas.height / 2\r\n     * ------ 上面的计算是基于 fovy 是 90 度的情况，当 fovy 非 90 时，需要乘以比例 --------\r\n     * */\r\n    const deltaTop = Math.tan(angle2PI(Math.abs(this.pitch))) * (container.offsetHeight / 2) * (90 / DefaultFovy);\r\n    const top = this.pitch > 0 ? centerY - deltaTop : centerY + deltaTop;\r\n    this.dom.style.top = `${top}px`;\r\n\r\n    /**\r\n     * yaw 先转换到 [0, 360)，再区分 [0, 90, 180, 270, 360) 各个区间计算\r\n     * 只要处理 [0, 90) 和 (270, 360)\r\n     * 90 和 270 是无穷大，(90, 270) 范围在视线背面\r\n     *\r\n     * [0, 90): tan(yaw) = deltaLeft / 1\r\n     * (270, 360): tan(360 - yaw) = deltaLeft / 1\r\n     *\r\n     * 横向偏移量还和 canvas 的宽高比还有关系，但是垂直方向的偏移量和宽高比没关系？？？\r\n     * ------ 上面的计算是基于 fovy 是 90 度的情况，当 fovy 非 90 时，需要乘以比例 --------\r\n     * */\r\n    this.yaw = angleIn360(this.yaw);\r\n    let deltaLeft;\r\n    if (this.yaw >= 0 && this.yaw < 90) {\r\n      deltaLeft = Math.tan(angle2PI(this.yaw));\r\n    } else if (this.yaw > 270) {\r\n      deltaLeft = -Math.tan(angle2PI(360 - this.yaw));\r\n    } else {\r\n      // 直接给一个画布的宽度值，偏移到外面不显示\r\n      deltaLeft = 4;\r\n    }\r\n    deltaLeft *= ((container.offsetWidth / 2) * (offsetHeight / offsetWidth) * (90 / DefaultFovy));\r\n    this.dom.style.left = `${centerX + deltaLeft}px`;\r\n  }\r\n\r\n  /**\r\n   * 销毁\r\n   * */\r\n  destroy() {\r\n    // 移除图片\r\n    if (this.pano.container) this.pano.container.removeChild(this.dom);\r\n  }\r\n\r\n}\r\n","import {Pano, CubeScene, SphereScene, HotSpot, SceneAngle, Scene} from '../src/index';\r\n\r\nimport b_b from './assets/bedroom/b.jpg';\r\nimport b_d from './assets/bedroom/d.jpg';\r\nimport b_f from './assets/bedroom/f.jpg';\r\nimport b_l from './assets/bedroom/l.jpg';\r\nimport b_r from './assets/bedroom/r.jpg';\r\nimport b_u from './assets/bedroom/u.jpg';\r\n\r\nimport bt_b from './assets/bedroom_tiny/b.jpg';\r\nimport bt_d from './assets/bedroom_tiny/d.jpg';\r\nimport bt_f from './assets/bedroom_tiny/f.jpg';\r\nimport bt_l from './assets/bedroom_tiny/l.jpg';\r\nimport bt_r from './assets/bedroom_tiny/r.jpg';\r\nimport bt_u from './assets/bedroom_tiny/u.jpg';\r\n\r\nimport r_b from './assets/restroom/b.jpeg';\r\nimport r_d from './assets/restroom/d.jpeg';\r\nimport r_f from './assets/restroom/f.jpeg';\r\nimport r_l from './assets/restroom/l.jpeg';\r\nimport r_r from './assets/restroom/r.jpeg';\r\nimport r_u from './assets/restroom/u.jpeg';\r\n\r\nimport sphereImg from './assets/room.jpeg';\r\n\r\nimport arrow from './assets/hotSpot/arrow.gif';\r\n\r\n// 创建热点 dom\r\nfunction createHotSpotDom(description?: string): HTMLElement {\r\n  const container = document.createElement('div');\r\n  container.style.display = 'flex';\r\n  container.style.flexDirection = 'column';\r\n  container.style.justifyContent = 'center';\r\n  container.style.alignItems = 'center';\r\n  container.style.backgroundColor = 'rgba(0, 0, 0, 0.2)';\r\n  container.style.borderRadius = '10px';\r\n  container.style.padding = '0 8px 10px';\r\n\r\n  const img = document.createElement('img');\r\n  img.src = arrow;\r\n  img.style.objectFit = 'contain';\r\n  img.style.width = '40px';\r\n  img.style.height = '40px';\r\n\r\n  container.appendChild(img);\r\n\r\n  if (description) {\r\n    const desc = document.createElement('span');\r\n    desc.style.fontSize = '12px';\r\n    desc.style.color = '#ffffff';\r\n    desc.style.marginTop = '6px';\r\n    desc.innerText = description;\r\n    container.appendChild(desc);\r\n  }\r\n\r\n  return container;\r\n}\r\n\r\nfunction main() {\r\n  const pano = new Pano('containerId', true);\r\n\r\n  // 主卧\r\n  const bedroomScene = new CubeScene([bt_f, bt_r, bt_u, bt_l, bt_d, bt_b], { yaw: 50, pitch: -20 });\r\n  // 主卧热点\r\n  const restroomHotSpot = new HotSpot(createHotSpotDom('卫生间'), { pitch: -10, yaw: 55, target: 1 });\r\n  const toBeautyDom = createHotSpotDom('看精装');\r\n  toBeautyDom.onclick = () => pano.setScene(2);\r\n  const beautySpot = new HotSpot(toBeautyDom, { pitch: -10, yaw: 0 });\r\n  bedroomScene.addHotSpots([restroomHotSpot, beautySpot]);\r\n\r\n  // 卫生间\r\n  const restroomScene = new CubeScene([r_f, r_r, r_u, r_l, r_d, r_b], { yaw: 200, pitch: -30 });\r\n  // 卫生间热点\r\n  const bedroomHotSpot = new HotSpot(createHotSpotDom('主卧'), { pitch: -10, yaw: 10, target: 0 });\r\n  restroomScene.addHotSpots(bedroomHotSpot);\r\n\r\n  // 精装主卧\r\n  const beautyScene = new SphereScene(sphereImg, { yaw: 80, pitch: 10 });\r\n  // 精装主卧热点\r\n  const backHomeSpot = new HotSpot(createHotSpotDom('回简装'), { pitch: -10, yaw: 80, target: 0 });\r\n  beautyScene.addHotSpots(backHomeSpot);\r\n\r\n  // 全部添加到 pano\r\n  pano.addScene(bedroomScene);\r\n  pano.addScene(restroomScene);\r\n  pano.addScene(beautyScene);\r\n\r\n  pano.render();\r\n\r\n  // 加载卧室高清图并替换\r\n  const replaceTexture = (sources: string[]) => {\r\n    function loadImage(src: string): Promise<TexImageSource> {\r\n      return new Promise((resolve, reject) => {\r\n        const image = new Image();\r\n        image.crossOrigin = 'anonymous';\r\n        image.onload = () => resolve(image);\r\n        image.onerror = error => reject(error);\r\n        image.src = src;\r\n      });\r\n    }\r\n\r\n    Promise.all(sources.map(src => loadImage(src))).then(images => bedroomScene.replaceTextures(images));\r\n  };\r\n  replaceTexture([b_f, b_r, b_u, b_l, b_d, b_b]);\r\n\r\n  // 按钮\r\n  document.getElementById('getCurrentScene').onclick = () => {\r\n    const currentScene = pano.getCurrentScene();\r\n    if (currentScene === bedroomScene) {\r\n      alert('房间');\r\n    } else if (currentScene === restroomScene) {\r\n      alert('洗手间');\r\n    } else if (currentScene === beautyScene) {\r\n      alert('精装房间');\r\n    } else {\r\n      alert('没有当前场景');\r\n    }\r\n  };\r\n  document.getElementById('setScene1').onclick = () => {\r\n    pano.setScene(0);\r\n  }\r\n  document.getElementById('setScene2').onclick = () => {\r\n    pano.setScene(restroomScene);\r\n  }\r\n  document.getElementById('setScene3').onclick = () => {\r\n    pano.setScene(2);\r\n  }\r\n\r\n  const onSceneChange = (scene: Scene, index: number) => {\r\n    document.getElementById('showCurrentScene').innerText = `当前场景：第${index + 1}个场景`;\r\n  };\r\n\r\n  document.getElementById('addListener').onclick = () => {\r\n    pano.addListener('sceneChange', onSceneChange);\r\n    document.getElementById('showCurrentScene').innerText = '切换后显示当前场景';\r\n  };\r\n\r\n  document.getElementById('removeListener').onclick = () => {\r\n    pano.removeListener('sceneChange', onSceneChange);\r\n    document.getElementById('showCurrentScene').innerText = '当前场景：';\r\n  };\r\n\r\n  document.getElementById('getAngle').onclick = () => {\r\n    const currentScene = pano.getCurrentScene();\r\n    const angle = currentScene.getAngle();\r\n    alert(`pitch: ${angle.pitch.toFixed(2)}；yaw: ${angle.yaw.toFixed(2)}`);\r\n  };\r\n\r\n  document.getElementById('setAngle').onclick = () => {\r\n    const currentScene = pano.getCurrentScene();\r\n    currentScene.setAngle({ pitch: 30, yaw: 45 });\r\n  }\r\n  document.getElementById('setAngleAnim').onclick = () => {\r\n    const currentScene = pano.getCurrentScene();\r\n    currentScene.setAngle({ pitch: 30, yaw: 45 }, { animation: true });\r\n  }\r\n\r\n  document.getElementById('getFovy').onclick = () => {\r\n    const currentScene = pano.getCurrentScene();\r\n    alert(`fovy: ${currentScene.getFovy().toFixed(2)}`);\r\n  };\r\n\r\n  document.getElementById('setFovy').onclick = () => {\r\n    const currentScene = pano.getCurrentScene();\r\n    currentScene.setFovy(80);\r\n  }\r\n  document.getElementById('setFovyAnim').onclick = () => {\r\n    const currentScene = pano.getCurrentScene();\r\n    currentScene.setFovy(80, { animation: true });\r\n  }\r\n\r\n  const onAngleChange = (angle: SceneAngle) => {\r\n    document.getElementById('showCurrentAngle').innerText = `pitch：${angle.pitch.toFixed(2)}；yaw：${angle.yaw.toFixed(2)}`;\r\n  };\r\n\r\n  document.getElementById('addAngleListener').onclick = () => {\r\n    bedroomScene.addListener('angleChange', onAngleChange);\r\n    restroomScene.addListener('angleChange', onAngleChange);\r\n    beautyScene.addListener('angleChange', onAngleChange);\r\n    document.getElementById('showCurrentAngle').innerText = '移动切换后显示角度';\r\n  };\r\n\r\n  document.getElementById('removeAngleListener').onclick = () => {\r\n    bedroomScene.removeListener('angleChange', onAngleChange);\r\n    restroomScene.removeListener('angleChange', onAngleChange);\r\n    beautyScene.removeListener('angleChange', onAngleChange);\r\n    document.getElementById('showCurrentAngle').innerText = '当前角度：';\r\n  };\r\n}\r\n\r\nwindow.onload = main;\r\n"],"names":["__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","exports","module","__webpack_modules__","g","globalThis","this","Function","e","window","scriptUrl","importScripts","location","document","currentScript","src","scripts","getElementsByTagName","length","Error","replace","p","create3DContext","canvas","opt_attribs","names","context","ii","getContext","opt_onError","msg","container","str","WebGLRenderingContext","innerHTML","makeFailHTML","addEventListener","event","statusMessage","WebGLDebugUtils","glValidEnumContexts","glEnums","init","ctx","propertyName","checkInit","glEnumToString","value","name","toString","glFunctionArgToString","functionName","argumentIndex","funcInfo","resetToInitialState","numAttribs","getParameter","MAX_VERTEX_ATTRIBS","tmp","createBuffer","bindBuffer","ARRAY_BUFFER","disableVertexAttribArray","vertexAttribPointer","FLOAT","vertexAttrib1f","deleteBuffer","numTextureUnits","MAX_TEXTURE_IMAGE_UNITS","activeTexture","TEXTURE0","bindTexture","TEXTURE_CUBE_MAP","TEXTURE_2D","useProgram","ELEMENT_ARRAY_BUFFER","bindFramebuffer","FRAMEBUFFER","bindRenderbuffer","RENDERBUFFER","disable","BLEND","CULL_FACE","DEPTH_TEST","DITHER","SCISSOR_TEST","blendColor","blendEquation","FUNC_ADD","blendFunc","ONE","ZERO","clearColor","clearDepth","clearStencil","colorMask","cullFace","BACK","depthFunc","LESS","depthMask","depthRange","frontFace","CCW","hint","GENERATE_MIPMAP_HINT","DONT_CARE","lineWidth","pixelStorei","PACK_ALIGNMENT","UNPACK_ALIGNMENT","UNPACK_FLIP_Y_WEBGL","UNPACK_PREMULTIPLY_ALPHA_WEBGL","UNPACK_COLORSPACE_CONVERSION_WEBGL","BROWSER_DEFAULT_WEBGL","polygonOffset","sampleCoverage","scissor","width","height","stencilFunc","ALWAYS","stencilMask","stencilOp","KEEP","viewport","clientWidth","clientHeight","clear","COLOR_BUFFER_BIT","DEPTH_BUFFER_BIT","STENCIL_BUFFER_BIT","getError","opt_onErrorFunc","err","args","argStr","console","log","glErrorShadow","makeErrorWrapper","result","apply","arguments","wrapper","NO_ERROR","wrapper_","contextId_","contextLost_","resourceDb_","onLost_","onRestored_","nextOnRestored_","glErrorShadow_","checkResources","arg","obj","WebGLBuffer","WebGLFramebuffer","WebGLProgram","WebGLRenderbuffer","WebGLShader","WebGLTexture","__webglDebugContextLostId__","makeLostContextWrapper","f","INVALID_OPERATION","makeWebGLContextEvent","loseContext","k","Object","keys","glErrorShdow_","clearErrors","CONTEXT_LOST_WEBGL","setTimeout","restoreContext","resource","WebctxFramebuffer","deleteFramebuffer","WebctxProgram","deleteProgram","WebctxRenderbuffer","deleteRenderbuffer","WebctxShader","deleteShader","WebctxTexture","deleteTexture","freeResources","callback","creationFunctions","push","functionsThatShouldReturnNull","isFunctions","wrapEvent","listener","info","handleEvent","checkFramebufferStatus","FRAMEBUFFER_UNSUPPORTED","getAttribLocation","getVertexAttribOffset","isContextLost","registerOnContextLostListener","registerOnContextRestoredListener","gl","program","createProgram","vshader","fshader","vertexShader","loadShader","VERTEX_SHADER","fragmentShader","FRAGMENT_SHADER","attachShader","linkProgram","getProgramParameter","LINK_STATUS","getProgramInfoLog","type","source","shader","createShader","shaderSource","compileShader","getShaderParameter","COMPILE_STATUS","getShaderInfoLog","initArrayBuffer","data","size","attribute","buffer","bufferData","STATIC_DRAW","a_attribute","enableVertexAttribArray","loadImage","Promise","resolve","reject","image","Image","crossOrigin","onload","onerror","error","ImageResource","loadTexImages","images","all","map","then","results","forEach","index","filterSceneSrcTex","scene","textures","Array","filter","item","DefaultYRange","matrix4","elements","Float32Array","Matrix4","i","setIdentity","set","multiply","a","b","ai0","ai1","ai2","ai3","transpose","t","setInverseOf","s","d","inv","det","invert","setOrtho","left","right","bottom","top","near","far","rw","rh","rd","ortho","setPerspective","fovy","aspect","ct","Math","PI","sin","cos","perspective","setScale","x","y","z","scale","setTranslate","translate","setRotate","angle","c","len","rlen","nc","xy","yz","zx","xs","ys","zs","sqrt","rotate","setLookAt","eyeX","eyeY","eyeZ","centerX","centerY","centerZ","upX","upY","upZ","fx","fy","fz","rlf","sx","sy","sz","rls","ux","uy","uz","lookAt","angleIn360","angle2PI","PI2Angle","pi","pitch","yaw","eye","position","target","up","yRange","dragging","dragStartPoint","angling","fovying","angleChangeCallbacks","hotSpots","getPitchRange","fovyHalf","setMvpMatrix","pano","u_MvpMatrix","getUniformLocation","mvpMatrix","uniformMatrix4fv","addListener","removeListener","removeAllListeners","destroy","hotSpot","getAngle","getFovy","renderHotSpots","deltaPitch","deltaYaw","render","executeAngleChangeCallbacks","beforeDrawElements","PitchRange","addHotSpots","pitchAngle","spot","concat","draw","drawModel","moveTo","targetX","targetY","deltaX","deltaY","atan","move","options","animation","duration","Date","now","requestAnimationFrame","deltaTime","setAngle","targetPitch","targetYaw","setFovy","onHotSpotClick","switchScene","eventBind","onmousedown","ev","style","cursor","offsetX","offsetY","onmouseup","onmouseout","onmousemove","ontouchstart","getBoundingClientRect","changedTouches","clientX","clientY","ontouchmove","replaceTextures","defaultAngle","initTexture","unit","texture","createTexture","texUnit","samplerPrefix","TEXTURE1","TEXTURE2","TEXTURE3","TEXTURE4","TEXTURE5","texImage2D","RGBA","UNSIGNED_BYTE","texParameteri","TEXTURE_MIN_FILTER","LINEAR","TEXTURE_WRAP_S","CLAMP_TO_EDGE","TEXTURE_WRAP_T","u_Sampler","uniform1i","getUFaceLocation","CubeScene","u_Face","allFacesIndices","faceIndices","renderFace","loadTextures","r","u","l","sourceOrder","srcSources","sources","getTexImageSource","shift","indices","indexBuffer","drawElements","TRIANGLES","vertices","texs","img","Uint8Array","aj","sj","cj","ai","si","ci","p1","p2","verticesArray","texsArray","indicesArray","j","SphereScene","sections","Uint32Array","verticeTexIndices","getExtension","UNSIGNED_INT","getSingleTexImageSource","containerId","debug","scenes","sceneIndex","rendered","sceneChangeCallbacks","currentScene","getElementById","createElement","append","antialias","getWebGLContext","setStyle","onContainerResize","initShader","Pano","CubeGLProgram","SphereGLProgram","overflow","containerPosition","desiredCSSWidth","offsetWidth","desiredCSSHeight","offsetHeight","devicePixelRatio","ResizeObserver","observe","addScene","renderScene","enable","firstNeighborIndex","firstHotSpots","hot","neighborIndex","neighborScene","_","includes","otherScene","loadPanoTexImage","getCurrentScene","setScene","indexOf","dom","originOnClick","onclick","deltaLeft","deltaTop","tan","abs","removeChild","createHotSpotDom","description","display","flexDirection","justifyContent","alignItems","backgroundColor","borderRadius","padding","arrow","objectFit","appendChild","desc","fontSize","color","marginTop","innerText","bedroomScene","restroomHotSpot","toBeautyDom","beautySpot","restroomScene","bedroomHotSpot","beautyScene","backHomeSpot","alert","onSceneChange","toFixed","onAngleChange"],"sourceRoot":""}